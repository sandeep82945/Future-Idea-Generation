The role of a market maker is to simultaneously offer to buy and sell quantities of goods, often a financial asset such as a share, at specified prices. An automated market maker (AMM) is a mechanism that offers to trade according to some predetermined schedule; the best choice of this schedule depends on the market maker’s goals. The literature on the design of AMMs has mainly focused on prediction markets with the goal of information elicitation. More recent work motivated by DeFi has focused instead on the goal of profit maximization, but considering only a single type of good (traded with a numeraire), including under adverse selection (Milionis et al. 2022). Optimal market making in the presence of multiple goods, including the possibility of complex bundling behavior, is not well understood. In this paper, we show that finding an optimal market maker is dual to an optimal transport problem, with specific geometric constraints on the transport plan in the dual. We show that optimal mechanisms for multiple goods and under adverse selection can take advantage of bundling, both improved prices for bundled purchases and sales as well as sometimes accepting payment “in kind.” We present conjectures of optimal mechanisms in additional settings which show further complex behavior. From a methodological perspective, we make essential use of the tools of differentiable economics to generate conjectures of optimal mechanisms, and give a proof-of-concept for the use of such tools in guiding theoretical investigations. 1 introduction Market participants like to buy low and sell high, and avoid doing the opposite, at least in expectation. By doing this, a market participant can make a profit. A typical market maker, which is an entity that plays a role in facilitating trades by other market participants, achieves profits by charging a spread: they are willing to buy some quantity of a good at a fixed price, and sell the same quantity at a higher fixed price. The goal of a market maker is to profit even in the face of potential adverse selection, which can arise when better informed traders can selectively accept offers that are profitable to them (and therefore unprofitable to the market maker). Roughly speaking, the spread should be wider when there is greater adverse selection. At the same time, there is a much richer space of possibilities for market makers than simply adjusting the spread. Automated market makers (AMMs), as used in prediction markets and decentralized finance (DeFi), frequently make use of these richer possibilities. For example, the logarithmic-market scoring rule (LMSR) [23] and constant-product market makers [48] have the effect of offering a trader a continuum of trades at a continuum of prices. From the perspective of mechanism design, the use of spread by a market maker is similar to a posted-price mechanism, and posted-price mechanisms are well known to be optimal for selling a single good to a single buyer. Under reasonable models of adverse selection, the same is true for market making: optimal mechanisms consist of a bid-ask spread, where the nature and extent of adverse selection determines the width of the spread [33]. From the full space of mechanisms, the optimal mechanism in this single good case is therefore surprisingly simple. But what if a market maker wants to make markets in multiple goods at once? In this case, the full space of mechanisms might be extremely rich: in addition to offering a continuum of trades (as with the aforementioned, single-good AMMs), there could be bundling among goods and the potential to accept goods “in kind” in exchange for a lower payment. For example, a market maker might offer to buy good 1 for
ar X
iv :2
40 2. 09 12
9v 1
[ cs
.G T
] 1
4 Fe
b 20
24
price x, or sell good 2 for price y, but simultaneously buy good 1 and sell good 2 charging z < y − x. To our knowledge, it is atypical for current market makers to bundle goods, and they instead simply adjust a separate spread per good (analogous to item-wise, posted prices). There are a few exceptions, though; e.g., in the case of certain order types on the OneChronos combinatorial stock exchange [36], some experiments in combinatorial prediction markets [27, 16], and the portfolio trading of bonds. Many of these aforementioned cases of bundling are motivated by outside business constraints; e.g., there may be complements or substitutes between goods, or there may be practical reasons why a customer is forced to trade bundles. But what if all these outside concerns are removed? We want to understand whether a profit-maximizing market maker in the multiple-good case will want to take advantage of the full richness of the space of mechanisms. (Indeed, in classic auction design when selling multiple goods to a single buyer, optimal mechanisms may show this kind of complexity [14, 29, 25].) This question motivates our work. Under a deliberately simple model of additive and quasilinear traders, and considering an objective for the market maker that can take into account the possibility of adverse selection (following that of Milionis et al. [32]), we ask how much of the full space of possible mechanisms will a market maker want to use? We give answers to this question, and further believe that the computational and theoretical tools that we develop have broader interest. Our methodological contributions The space of possible market making strategies is quite complex in the multiple good case, and conjecturing the form of an optimal solution is not trivial. To search through the space of mechanisms and develop our theoretical results and additional conjectures on optimal designs, we make use of differentiable economics [17], which employs the tools of modern machine learning to search through the space of all mechanisms to optimize performance. Through differentiable economics, we find conjectured optimal mechanisms that make use of the full richness of the space of possible mechanisms: displaying bundling behavior across both buying and selling, and potentially offering a continuum of possible trades. Differentiable economics has previously been used to find a optimal auctions in a few, stylized auction settings [17, 46]. Here, we utilize differentiable economics, in particular RochetNet [17], in studying and developing the theory for a new kind of problem (optimal market making with multiple goods and adverse selection), applying it from the start to guide our understanding and theoretical development. In doing so, we have found the methods of differentiable economics to be invaluable in guiding our exploration. The techniques we use appear to work quite well, and require only access to samples from the market maker’s distribution of beliefs about traders. For this reason, we belief that future work can also pursue their use as a tool for data-driven design of market makers that can inform deployment. Our theoretical contributions We provide a framework for formally proving the optimality of conjectured mechanisms that are generated through the differential economics pipeline. To do this, we treat market makers as strategyproof mechanisms, and show that the market maker design problem is dual to an optimal transport problem, extending the theory of optimal transport duality from [14, 25] to allow for different constraints on the primal and dual, and giving a geometric interpretation of these constraints that allows solving the dual problem. In particular, we use differentiable economics to search for profitable mechanisms across multiple valuation distributions. We find that some of the learned mechanisms make use of mixed bundling; i.e., trading in goods separately at one price, but also offering bundle discounts or taking payments in kind (accepting a sale of one good to discount the purchase of another). Other mechanisms offer a continuum of allocations in certain regions. Based on this, we conjecture that the full space of mechanisms is in fact potentially useful to the market maker. For one of these cases, we apply the duality framework, constructing explicit dual certificates for a particular choice of distribution under a linear model of adverse selection, showing optimality for a family of mechanisms parameterized by the strength of adverse selection. As conjectured, the optimal mechanisms offer a bid-ask spread for each good. However, they also offer bundled trades at better prices than the separate bids and asks. For a specific example in one case, the trader can buy one good for 56 , or sell another for 16 , but simultaneous buying and selling costs only 4− √ 2 6 . As the strength of adverse selection decreases,
the prices for all goods and bundles improve nonlinearly. We thus answer our main question about the optimal design of market makers in this multiple good setting in the affirmative: under a reasonable model of adverse selection, it may be optimal for a profitmaximizing market maker to engage in mixed bundling, with profits up to 11.4% greater than separately making a market for each good. Beyond being of theoretical interest, we believe that this positive answer to the question about the richness of market making possibilities in this setting can motivate the use of multiple-good CFMMs in DeFi and perhaps also in prediction markets, as well as providing a motivation for the increased use of combinatorial bundle order types in securities markets. 1.1 related work  1.1.1 the multiple-good monopolist problem Adams and Yellen [4] observed that for a monopolist selling more than one good, it may be advantageous to engage in mixed bundling, selling a bundle of multiple goods at a discounted price, while possibly also offering each good separately at an independent price. Surprisingly, this advantage does not require that goods be complements or substitutes; rather, it can happen even if the goods are completely unrelated, for example with a buyer with additive values. A long line of work [31, 30, 42] seeks to characterize in what circumstances taking advantage of bundling is optimal. Pavlov [38], Manelli and Vincent [29], and Giannakopoulos and Koutsoupias [21] all give explicit optimal solutions to particular special cases of the multiple-good monopolist problem, and show that these solutions do sometimes involve mixed bundling. Daskalakis et al. [13, 14] present a general theory of strong duality, in which the optimal mechanism design problem is shown to be dual to a relaxed optimal transport problem. They show that depending on the particular problem, selling separately, selling only a bundle, mixed bundling, or even offering an infinite continuum of lottery bundles could be optimal. Kleiner and Manelli [26] give an equivalent formulation of the problem in terms of infinite-dimensional linear programming, and Kash and Frongillo [25] allow for more general constraints on allocations. 1.1.2 prediction markets and automated market makers There is a rich literature on the use of AMMs to facilitate prediction markets [19, 37, 3, 2]. There are direct connections between truthful mechanisms and proper scoring rules [18, e.g.]. However, the goals of prediction markets are very different than those in the present paper: the purpose of a prediction market is to elicit useful information from traders. Profit is usually not a concern, and the market maker may be happy to tolerate a bounded loss if this helps the market run smoothly. Because the goal is to elicit accurate predictions, these mechanisms are also designed with properties that are almost diametrically opposed to our goals. For example, they should be not merely weakly truthful, but strictly truthful, to uniquely distinguish all types (in the language of scoring rules, they should be strictly proper and not just proper). This necessarily means that there cannot be a “no-trade” region where many types all receive the identical zero allocation; in contrast, we will see that optimal market makers often must do this in our setting. Moreover, most prediction markets consider a single security at once (see [16, 27] for examples of combinatorial markets). We do note that there is other work from this literature that does focus on profit [1, 37, 12]. 1.1.3 constant-function market makers Constant-function market makers (CFMM) are a class of AMMs that start with an initial portfolio of assets (one of which may be considered the numeraire) from a liquidity provider (LP). They are willing to exchange any basket of assets for another basket of assets as long as some constant function of the portfolio (referred to as the “invariant” or “curve”) is preserved. Angeris et al. [5] describes how to construct a CFMM curve that results in a given payoff for the liquidity provider, as long as that payoff is concave in the price. Milionis et al. [32] give one criterion, loss-versus-rebalancing, for measuring the performance over time of AMMs. Milionis et al. [33] consider a flexible model of adverse selection over a single time step and show that optimal CFMM “curves” take the form of a bid-ask spread. Goyal et al. [22], similar to our work, consider optimizing CFMMs for various performance goals given market maker beliefs about the value of goods. Their main focus is an objective related to liquidity, where they show a correspondence between market maker beliefs and various existing and new CFMM curves. They also consider optimizing for profit and loss-versus-rebalancing. Crucially, they focus on a single-parameter setting, with one token trading against one numeraire. 1.1.4 characterization of truthful mechanisms Rochet [41] gives an extremely useful characterization of dominant-strategy incentive compatible (DSIC, or strategyproof) mechanisms. Essentially, every truthful mechanism can be identified with a convex function mapping the participant’s true type to their utility for bidding truthfully. The allocation rule (which uniquely determines the payment rule) for a given type corresponds to the (sub)gradient of this function. Finally, one can interpret the convex conjugate of this function [43] as a summary of the “menu” mapping possible allocations to prices. Frongillo and Kash [18] extend this general idea to additional mechanism design problems such as truthful elicitation via scoring rules and liquidity provision in prediction markets. There are in fact further similarities between all of the above results, which identify each mechanism with the utility it induces for an honest agent, and connect strategyproofness to convexity. For example, [20] show an equivalence between CFMMs and scoring rules. Angeris et al. [5] characterize CFMMs in terms of a concave “value function” which, up to a linear translation, corresponds to the utility function of the mechanism participant. Frongillo and Kash [18], Section 1.2, give an exhaustive survey of related work with similar results. 1.1.5 automated mechanism design and differentiable economics The general lack of theoretical progress on the problem of optimal mechanism design has motivated the use of automated mechanism design: the use of computational techniques to search for high-performing mechanisms on specific problem instances [9, 44, 28, 45]. In the typical model of mechanism design, the valuation distribution is common knowledge, and if samples are available from this distribution, it is natural to formulate the mechanism design problem as a machine learning problem; indeed, a number of works have considered the learning-theoretic properties of various classes of mechanisms [8, 7, 6]. More recently, Dütting et al. [17] introduce differentiable economics: the use of rich, flexible function approximators, trained via stochastic gradient descent, for strategyproof auction design. One of their architectures, RegretNet, works for multi-bidder auctions, with strategyproofness constraints approximately enforced via a penalty term. Another architecture, RochetNet, is always strategyproof but only well-defined for single-bidder auctions. This single bidder fits with the present setting, where we seek the optimal design given knowledge of a distribution on the possible types of a single trader who will interact with the market maker, and we make use of the RochetNet approach in the present paper. Separately, Shen et al. [46] consider MenuNet, an architecture which takes a similar approach to RochetNet and is also limited to single-bidder settings, and to which they apply to a broader class of value models beyond additive and unit-demand. Curry et al. [11] present a direct generalization of these two approaches, appealing to affine maximizers to give an architecture that is always strategyproof and well defined for many-bidder auctions (although it may not always be able to represent the optimal mechanism). There are followups improving on the architecture of RegretNet [28, 39, 40, 10] and the Curry et al. [11] approach [15]. 2 our model Here we describe our model of optimal automated market-maker design. We first describe our family of objectives, which are a generalization of those of Milionis et al. [33] to multiple goods. We then describe our constraints, that is, the set of mechanisms we are willing to consider. These correspond to either
strategyproof and individually rational (defined below) direct-revelation mechanisms with feasible allocation rules, or menus of (lottery) bundles at associated prices.1 An important detail of the market setting is that we also need to handle adverse selection, reflecting that the trader may be better informed than the market maker. 2.1 mechanism design objectives We assume that the market maker has some initial belief vector c ∈ X = [0, b]d, for some maximum value b > 0, on the value for each of d ≥ 1 goods. A trader has their own value vector x ∈ X = [0, b]d, and seeks to trade with the market maker. The trader’s value is, in mechanism design terms, their type, drawn from some distribution with probability density function, f(x). We assume that the market maker is willing to buy or sell up to one unit of each good. After a trade, the market maker receives a profit equal to their gain or loss of money plus the value of goods bought or sold, also considering how their beliefs may be affected by the trade. In particular, there is the possibility of adverse selection: the market maker may be incorrect about the value c, and the trader may be better informed. To capture this possibility, following Milionis et al. [32], we adopt an update function, π(c, x) : X × X → X . When the market maker observes a trader with value x, they update their own belief about the value of the goods from c to π(c, x) (note that, as in Milionis et al. [32], we require that π(c, c) = c). The resulting profit is the revenue minus the loss due to the sale of goods (respectively, payment to trader and profit from gain of goods). Suppose that after a trade takes place, the trader’s allocation of goods is a ∈ [−1, 1]d and their payment is p ∈ R. Note that the trader may gain or lose a fractional amount of each good, and that payment p may be negative in the case that they receive a payment from the market maker. Then the trader’s utility is their value of the allocation (perhaps negative, in the case of a sale) minus their payment: a · x− p. The market maker’s profit is the revenue from the sale (perhaps negative if they pay the trader), minus the loss or gain from the transfer of goods, this measured at their updated belief about the value of the goods: p−a ·π(c, x). In other words, given beliefs about the value of goods, the market maker and trader each have additive and quasilinear utility. We highlight three important special cases, each with a different definition of belief update, π:
1. When π(c, x) = c, this is the “noise trading” case, where the mechanism designer believes that the bidders are simply uninformed, with no adverse selection. 2. In the above case, if we further have that c = 0, this recovers the “selling-only” case studied in the auction setting of Daskalakis et al. [14]. 3. If π(c, x) = λc + (1 − λ)x, for some 0 ≤ λ ≤ 1, this is the “linear interpolation” case from Milionis et al. [33]. This is a simple model of adverse selection. 2.2 class of mechanisms Following Rochet [41], we can consider three equivalent perspectives on our mechanisms. The first perspective is that of a strategyproof, direct-revelation mechanism, in which the trader directly reports their value vector x, and allocations and payments are determined according to an allocation rule, a(x) : X → [−1, 1]d and payment rule, p(x) : X → R. The bidder then has a utility, which is a function of their valuation: u(x) = a(x) · x − p(x). Strategyproofness means that there should be no incentive for the bidder to report anything other than their true value: that is, ∀x, x′ : a(x′) · x− p(x′) ≤ u(x). The second perspective is that a mechanism corresponds to offering a menu, specifying a price for any possible allocation a (with infinite, positive prices for infeasible allocations), where the trader chooses freely among the menu elements. One can denote this menu u∗(a), because it is the Fenchel conjugate [43] of the utility function u(x) enjoyed by a bidder who chooses their best menu element, or who participates truthfully
1There are also connections to constant-function market makers, which we discuss in Appendix A.
in the direct revelation mechanism. A third perspective is that given a utility function u(x), the gradients of the utility, ∇u(x), define the direct revelation allocation rule a(x), with payments p(x) = ∇u(x) · x− u(x). Rochet showed that all of these perspectives are in some sense equivalent. We find it especially useful to focus on the third perspective, and to design mechanisms through the design of the trader’s utility function u(x), because different mechanism design desiderata can be easily connected to constraints on the agent’s utility function. The first three desiderata are standard in mechanism design and the fourth is special to this domain. • Strategyproofness can be identified with convexity of the utility function [41]. • Individual rationality means that if traders participate truthfully, they are guaranteed nonnegative utility, so can always safely participate in the mechanism; this can be identified with nonnegativity of the utility function: ∀x, u(x) ≥ 0. . • Feasibility of allocations involves ensuring that the gradients are bounded. In particular, we would like that ∥a(x)∥∞ = ∥∇u(x)∥∞ ≤ 1, or equivalently that u(x) is 1-Lipschitz in the ℓ1 norm (dual to the ℓ∞ norm). • In addition, there is always a no-trade region in the present setting, that includes at least the point where the trader and market maker agree on the price (and thus do not want to trade). Under our model, this happens at the initial price belief c. Thus we also require u(c) = 0, which by nonnegativity means utility attains its minimum at c.
Based on these considerations, we define the following convex set of feasible mechanisms:
U = {u : X → R+ | u convex , ∥u(x)∥∞ ≤ 1, u(c) = 0}. We can also rewrite the market-maker’s expected profit in terms of u(x). Since a(x) = ∇u(x), profit is ∇u(x) · x − u(x) − ∇u(x) · π(c, x) = ∇u(x) · (x − π(c, x)) − u(x). Thus, the market maker’s objective of expected profit under belief updating, for traders distributed according to x ∼ f(x), is:∫
X (∇u(x) · (x− π(c, x))− u(x)) f(x) dx. (1) 3 establishing duality To find the profit-maximizing mechanism, we now face an optimization problem over the space of feasible utility functions:
sup u∈U ∫ X (∇u(x) · (x− π(c, x))− u(x)) f(x) dx. Our goal in this section is to establish strong duality: we will provide a dual minimization problem, and show that the primal and dual objectives coincide at the optimal point. This will allow us to check optimality of a proposed mechanism by showing a matching dual solution. 3.1 linearizing the objective Similar to other work, [30, 14, 25, 42], we can linearize our problem by doing integration by parts, establishing the following lemma. Lemma 3.1. ∫ (∇u(x) · (x− π(c, x))− u(x)) f(x) dx = ∫ u dµ+ − ∫ u dµ−, (2)
where µ = µ+ − µ− is a signed measure which integrates to 0, defined as
µ(A) = ∫ ∂X IA(x)f(x)(x− π(c, x)) · n̂ dx
− ∫ X IA(x)(∇f(x) · (x− π(c, x)) + (n+ 1− div π(c, x))f(x)) dx+ IA(c). (3)
The calculation, which is mainly an application of integration by parts, is in Appendix B. Interpretation of µ There are three terms in µ(A). The first term involves positive mass distributed along the boundary of the type space. The second term involves a density of negative mass distributed across the interior (and possibly also touching the boundaries). The third term is an indicator function denoting one positive unit of mass at c. Because we require that u(c) = 0, we can add this term without altering the result, which is useful as it serves to balance positive and negative mass so that we have a true optimal transport problem between µ+ and µ−. We will see in Sections 4 and 5 below that the positive mass IA(c) associated with this third term will be spread outward to exactly cover the negative mass in the “no-trade” regions that show up in the center of the type space. 3.2 statement of duality Following the above discussion, the mechanism design problem is to design a profit-maximizing, feasible utility function to the trader, u(x). We define a matching dual problem, and establish strong duality. Theorem 3.2 (Strong duality, following [47, 14, 25]). We have
sup u∈U
∫ u dµ+ − ∫ u dµ− = inf
γ:γ1⪰µ+,γ2⪯µ−
∫ ∥x− y∥1, dγ(x, y), (4)
where ⪰ is an integral stochastic order [34], representing the relation α ⪰ β ⇐⇒ ∀f ∈ U : ∫ f dα ≥ ∫ f dβ. The proof is in Section 3.4. While we focus on eq. (1) as the objective in this paper, the strong duality result also applies to any other objective that can be linearized into an integral of the trader’s utility function, u, against some balanced µ+ and µ−. 3.3 interpretation of the dual constraints The relation which we denote here as ⪰ has a geometric interpretation. Given some α ⪰ β, any modification to transform α into α′ that is guaranteed to weakly increase the value of ∫ f dα will ensure that α′ ⪰ β as well. In our case, f is required to be convex, so any mean-preserving spread (as in the sweeping/balayage discussed in Rochet and Choné [42]) of positive mass will weakly increase the value of the integral. Additionally, we require that f attain its minimum at c. This along with convexity means that moving positive mass in any direction coordinate-wise away from c weakly increases the value of the integral. (For negative mass, we have mean-preserving contractions and coordinate-wise moves towards c respectively.) Therefore, either mean-preserving spreads, or moving mass in any direction coordinate-wise away from c, can be used to improve the dual objective without paying a transport cost. In the special case when c is fixed to 0, we recover the selling-only, multiple good monopolist problem. Mean-preserving spreads are still allowed, and moving mass away from c = 0 amounts to moving mass upwards/rightwards, so ⪰ becomes precisely the convex dominance condition defined in [14]. Also, we have α ⪰ α, and so the ⪰ relation represents a relaxation of the typical equality constraints in an optimal transport problem. This relaxation of the dual is needed to maintain zero duality gap, because the primal mechanism design problem is tightened by additional constraints on the functions as a result of enforcing mechanism design desiderata such as strategyproofness. In addition, scaling f by a constant does not change anything. As such, the same ⪰ is defined if we instead consider U◦, the cone generated by U . u ∈ U◦ are still convex and attain their minimum of 0 at c, but are no longer necessarily 1-Lipschitz. 3.4 proving duality Daskalakis et al. [14] generalize the standard proof of optimal transport duality from Villani [47]; Kash and Frongillo [25] in turn builds further on each of these theories.2 We follow in this tradition to prove Theorem 3.2, for completeness reproducing much of the same structure of the proof. The key differences in our work are that we consider a different set of feasible functions U , and therefore a different definition of the relation ⪰, which requires some technical modifications to make the proof go through. Additionally, actually finding dual solutions requires a geometric interpretation of the relation ⪰, which is different than the integral stochastic orders in prior work. 3.4.1 weak duality It is easy to establish weak duality, in the same way as [14, 25]:∫ X u dµ+ − ∫ X u dµ− ≤ ∫ X u d(γ1 − γ2) by definition of ⪰
= ∫ X×X (u(x)− u(y)) dγ(x, y)
≤ ∫ X×X ∥x− y∥ dγ(x, y) by 1-Lipschitz property of u. Weak duality already suffices for using the framework to prove optimality. 3.4.2 strong duality We start by showing that the transport problem is dual to a an optimization problem over a pair of functions. Lemma 3.3.
inf γ:γ1⪰µ+,γ2⪯µ−
∫ ∥x− y∥1 dγ(x, y) = sup
ϕ(x)−ψ(y)≤∥x−y∥1,ϕ,ψ∈U◦
∫ ϕdµ+ − ∫ ψ dµ−. The proof, similar to those in previous work, is deferred to Appendix B.
Optimal Solution Involves a Single Function in U The next step is to show that some optimal, feasible pair ϕ, ψ which lie in the cone U◦ can be replaced with a weakly better pair of two identical functions ϕ, ϕ in U—in other words, a single feasible mechanism. The technique here is similar but not identical to prior work, due to the need to preserve the u(c) = 0 property. Lemma 3.4.
sup ϕ(x)−ψ(y)≤∥x−y∥1,ϕ,ψ∈U◦
∫ ϕdµ+ − ∫ ψ dµ− = sup
u∈U
∫ u dµ+ − ∫ u dµ−. Proof. First, let ϕ(x) = infy ψ(y) + ∥x− y∥1. ϕ is still a feasible function:
• it maintains convexity because ψ(y)+∥x−y∥1, a sum of convex functions, is convex in x and y [43, 26]. • ϕ(c) = 0 because ψ(c) = 0 and the ∥·∥1 term is minimized to 0 by setting y = c also. • Moreover, for any y that is the minimizer for ϕ(x), and for all x′, ϕ(x′) − ϕ(x) ≤ ψ(y) + ∥y − x′∥1 − ψ(y)− ∥y − x∥1 ≤ ∥x′ − x∥, so ϕ is also 1-Lipschitz in the ℓ1 norm. 2Kleiner and Manelli [26] give an alternate proof in terms of infinite-dimensional linear programming. We focus on the optimal transport interpretation because thinking geometrically in terms of transport plans is useful for actually finding dual solutions. But the linear programming interpretation may be helpful for some readers to keep in mind. ϕ is thus feasible, lying not just in U◦ but actually in U , and, because ϕ(x) ≤ ψ(y) + ∥x− y∥1, replacing ϕ by ϕ weakly improves the objective (by increasing the µ+ term). So we now have a new optimal pair ϕ, ψ, with ϕ ∈ U and ψ ∈ U◦. We can now define ψ(y) = supx ϕ(x)−∥x−y∥1. ψ(y) ≥ ϕ(x)−∥x−y∥1, so feasibility is maintained and the objective is weakly improved (by decreasing the µ− term). And in fact, ψ = ϕ. First, ψ(y) ≥ ϕ(y)−∥y− y∥ due to the supremum. Then,
ψ(y) = sup x ϕ(x)− ∥x− y∥
= ϕ(y) + sup x
( ϕ(x)− ∥x− y∥ ) − ϕ(y)
= ϕ(y) + sup x
( ϕ(x)− ϕ(y)− ∥x− y∥ ) ≤ ϕ(y),
where the last inequality follows because ϕ is 1-Lipschitz, so the objective of the supremum is always nonpositive. Thus ψ = ϕ, and we have a feasible pair ϕ, ϕ, with ϕ ∈ U , which has weakly improved the objective. Combining the above steps, we have
Proof of Theorem 3.2.
inf γ:γ1⪰µ+,γ2⪯µ−
∫ ∥x− y∥1 dγ(x, y) = sup
ϕ(x)−ψ(y)≤∥x−y∥1,ϕ,ψ∈U◦
∫ ϕdµ+ − ∫ ψ dµ− by Lemma 3.3
= sup u∈U
∫ u dµ+ − ∫ u dµ− by Lemma 3.4. 4 warmup: a 1d example Milionis et al. [33] give optimal mechanisms for the 1-dimensional case, that is, for the case of a market marker trading a single kind of good for a numeraire. They show that optimal mechanisms in this case take
the simple form of a bid-ask spread: an offer to sell one unit of a good at some price, and buy at a higher price. By analogy to a Myerson auction [35], they set these prices to maximize a “virtual valuation” which depends on the type distribution. Their problem setting is the one-dimensional case of the framework we study here, so we can view their solutions as convex utility functions lying in U . As a test and demonstration of our framework, we can construct dual solutions whose transport cost matches the expected profit, establishing optimality in an alternate way. 4.1 constructing the transformed measure Consider the case where the mechanism designer updates their beliefs about prices by linearly interpolating, so that π(c, x) = λc+ (1− λ)x, and distributions are uniform. We can consider the transformed measure, which places mass as follows:
• −(n+ 1) = −2 uniformly. • +(1− λ) uniformly from the f(x) div π = π′ term. • The above cancels out to −(λ+ 1) uniformly. • +λc mass at 0 (left normal term). • +(λ− λc) mass at 1 (right normal term). • +1 mass at c.
The total mass of µ+ and µ− are each λ + 1, so µ integrates to 0. For a visualization of this measure, see Fig. 1. 4.2 conjecture of optimal mechanism Following Milionis et al. [33], the upper and lower virtual value functions are λ(x−c)−(1−x) and λ(c−x)−x, so selling and buying at (1 + λc)/(λ + 1) and (λ/(λ + 1))c respectively is optimal. The expected profit of this mechanism, calculated directly, is (2(c−1)c+1)λ 2
2(λ+1) . 4.3 constructing the dual certificate µ− thus has a CDF of (1 + λ)x, i.e., it is uniform. Again, to construct γ1, we can perform preprocessing on µ+ to spread the point mass at c out to a uniform mass on the interval [ cλ1+λ , 1+cλ 1+λ ], resulting in CDF
Cγ1 =  0 x < 0 cλ 0 ≤ x < cλλ+1 cλ+ x− cλλ+1 cλ+1 λ+1 − cλ λ+1 cλ λ+1 ≤ x < cλ+1 λ+1
cλ+ 1 cλ+1λ+1 ≤ x < 1 λ+ 1 1 ≤ x
. Letting γ2 = µ −, we have a transport cost of ∫∞ −∞|Cγ1 − Cγ2 |= (2(c−1)c+1)λ2 2(λ+1) , which matches the expected profit, proving the proposed mechanism optimal. Observe that in the above case, the point mass IA(c) is spread out via preprocessing at no transport cost. The endpoints of the area to which it is spread precisely correspond to the no-trade region which is inside the bid and ask prices. 5 optimal mechanisms in multi-parameter settings Having warmed up on a 1D case where the optimal solution was already known, we proceed to apply the dual transport framework in earnest. This is not so easy to do. We have established that for any optimal mechanism, its expected profit must be matched by the transport cost of the dual transport problem. However, this gives us little insight into what an optimal mechanism might look like for a given problem instance; in particular, any combination of allocations and prices could be optimal. This is where we turn to differentiable economics to search for profitable mechanisms. Without any prior knowledge about the structure of the optimal mechanism, but only sample access to the valuation distribution, we show that we can use these techniques from differentiable economics to find high-performing mechanisms. We treat the results coming from this computational pipeline as conjectures for the form of the optimal mechanism. Although they are necessarily only numerical approximations, they contain a lot of useful information that we can use, along with knowledge about the dual program, to come up with plausible analytic expressions for the menus and prices. Then, we construct a transport plan for the dual and show that the primal and dual values match. This general approach has been used before to find a few new optimal mechanisms in simple, single bidder auction problems [46, 17]. Here, though, we apply differentiable economics as a tool throughout our work, adopting it to develop intuitions and theoretical directions for a new problem from the very start of our work (in fact, simple experiments with differentiable economics were able to yield helpful clues before we began proving mechanisms to be optimal, in particular providing hints about the geometric interpretation of the relation ⪰). 5.1 differentiable economics: architecture and training methods We encode our convex utility function (in the style of RochetNet from Dütting et al. [17]) as a maximization over a large number of hyperplanes, each corresponding to an allocation ai (represented by a parameter α ∈ R which is scaled via a sigmoid transformation to encode a feasible allocation in [−1, 1])and payment pi:
u(x) = max i ai · x− pi; where ai = 2σ(α)− 1, αi ∈ R, pi ∈ R.
Motivated by empirical results [17, 11] as well as theory [24], we overparameterize our networks with 210 menu items, even though few menu items are typically used. We train to directly optimize the profit objective, using softmax with a temperature of 100 as a differentiable surrogate for the max operation, and use Adam with the typical learning rate of 10−3 and large batch sizes of 216 or 215. Each job was scheduled on a compute cluster, running with a single A100 GPU. 5.2 a new family of optimal mechanisms We consider the case of two kinds of goods, with values uniformly distributed on [0, 1], a market maker with initial valuation of c = ( 12 , 1 2 ), and a linear update model, π(c, x) = λc+ (1− λ)x. We present a new family of optimal mechanisms for this setting. We train models for a range of values of λ, some of which are shown in Figure 2. These mechanisms have some shared structure. There is symmetry when reflecting across y = x, y = 12 , and x = 1 2 . They only make deterministic allocations (i.e., either selling -1, 0, or 1 units of each good), and within deterministic allocations, they offer every possible allocation for some price. There is a no-trade region centered at the initial price c = ( 12 , 1 2 ), and as we would expect, this increases in size (i.e., the prices for the trader get worse) as adverse selection becomes stronger. 5.2.1 constructing the transformed measure The transformed measure (Eq. 1) for this case is:
• −(2λ+ 1) mass distributed uniformly. • A +1 point mass at c.
• Mass of +(1− c1)λ on the right boundary, +(1− c2)λ on the top boundary, +c1λ on the left boundary, and +c2λ on the bottom boundary. The positive and negative masses each have magnitude 2λ + 1. The measure for the case where c = ( 12 , 1 2 ) is visualized in Fig. 1. 5.2.2 conjecture for optimal mechanism Consider the case where c = (12 , 1 2 ). We first train a model to maximize profit; the allocation rules for the mechanism after training are shown in the top row of Fig. 2. We use the learned model, as well as our knowledge of the problem setting, to conjecture the structure of the optimal mechanism. The mechanism should be deterministic, and offer eight menu items in addition to the no-trade option (every combination of buying or selling a full unit of the items, or neither). There should be a large octagonal no-trade region in the center. Also, because valuations are symmetric, the mechanism should be symmetric, despite minor asymmetries in the learned solution which can be ascribed to numerical imprecision. 5.2.3 constructing a dual certificate We now show how to construct a dual certificate and explicitly calculate its transport cost. For clarity, we show here the “noise trading” case where c = ( 12 , 1 2 ) and λ = 1. We also develop the optimal mechanism design parameterized by λ when c = ( 12 , 1 2 ). The calculations for this are similar but uglier, and relegated to Appendix D.
Partitioning the type space The solution of the optimal transport dual problem can be illustrated using an optimal partition of the unit square so that the minimal total transport cost is the sum of the minimal transport cost for each of the partitioned regions. Fig. 3, left, shows the optimal partition in this case. In the optimal transport solution, the +1 point mass at c = ( 12 , 1 2 ), according to our definition of ⪰, can be spread outward (away from c) to uniformly cover the octagon-shaped region at the center, at zero cost. In addition to the octagon, there are four equivalent rectangles and four equivalent pentagons. Each of the rectangles and pentagons contains a part of the four outer edges of the unit square, and the positive mass on that part of the edge gets distributed uniformly over the rectangle or pentagon to cancel out the negative mass. The total transport cost is therefore C1 = 4C (R) 1 +4C (P ) 1 , where C (R) 1 is the transport cost of one rectangle, C (P ) 1 is the transport cost of one pentagon, and the subscript 1 represents that these quantities are for the case of λ = 1. Transport plan We parameterize the partition in terms of lengths a1 and b1. In terms of these quantities, the transport cost for each rectangle is C (R) 1 = ∫ b1 0 ( 1−2a1 2 ) 1 b1 xdx = (1−2a1)b14 , while the total transport cost for the pentagon is C (P ) 1 = (5a1+b1)b1 6 (see the detailed calculations in Appendix C). The actual transport plans are visualized in Fig. 3, right and involve moving the positive mass along the edges uniformly inward until the boundary of the no-trade region is reached. Solving for a1 and b1 The structure of the transport plan constrains the values of a1 and b1. There is a positive mass on edge JK of length 1− 2a1, and as the mass density per unit length of the edge is 12 , the mass is 1−2a12 . This mass is moved upward to be distributed uniformly over the rectangle HIJK and should perfectly cancel out the negative mass in the rectangle. The density of the initial negative mass over the rectangle HIJK is −3(1−2a1)b1, and because it should perfectly cancel out the positive mass 1−2a12 , we have
1− 2a1 2 − 3(1− 2a1)b1 = 0. (5)
The positive mass on edge BC is b12 , and the negative mass on triangle EFG is − 3(a1−b1)2
2 . As these two masses should perfectly cancel out each other, we have
b1 2 − 3(a1 − b1) 2 2 = 0. (6)
Similarly, the positive mass on edge CD is a1−b12 , and the negative mass on rectangle CDEG is −3(a1−b1)b1. As these two masses should perfectly cancel out, we have
a1 − b1 2 − 3(a1 − b1)b1 = 0. (7)
Combining equations Eq. 5, Eq. 6, and Eq. 7, the values of a1 and b1 can be solved: a1 = 1+
√ 2 6 , b1 = 1 6 . Computing the menu The boundary between two regions is the point where a trader is indifferent between the two menu items. At any trader type on a boundary, we can easily calculate the welfare of the two neighboring allocations, and infer the price that would make the trader indifferent. The resulting menu is given in Table 1 and visualized in Fig. 4. The total transport cost for this pure noise trading case is
C1 = 4C (R) 1 + 4C (P ) 1 = 4 · (1− 2a1)b1 4 + 4 · (5a1 + b1)b1 6 = 1 27
( 6 + √ 2 ) ≈ 0.274601, (8)
which exactly matches the expected profit of the optimal menu, so our solutions are optimal. 5.2.4 adverse selection in two dimensions As mentioned, the above calculations are for the special case where λ = 1, i.e. no adverse selection. We also consider the more interesting case of the linear belief updating objective described above, for an initial valuation of c = ( 12 , 1 2 ). The calculations are similar, though more involved, and are deferred to Appendix D. The optimal mechanism in this case, as a function of the belief-updating parameter, λ, is given in Table 2. 5.2.5 discussion of economic properties of optimal mechanisms We now qualitatively discuss the mechanism shown in Table 2. There is a no-trade octagon in the center. Even with no adverse selection, this octagon is present, but as adverse selection grows stronger, it grows larger until eventually no trade is possible. The mechanism engages in mixed bundling: that is, for any combination of buying and selling both goods, there is an offer, as well as distinctly priced offers for buying or selling any individual good. In particular, bundles can involve buying one good and selling another, which we can interpret as taking payment “in kind.” The intuition for why this is useful is as follows: considering only the single-good offers in Table 2, the bid-ask spread is wider than in the optimal mechanism discussed in Section 4, so when single-good trades take place, they are more profitable, but a larger proportion of traders refuse to participate. However, some of these traders are then won back by offering a discount for the multiple good bundles, so profit is higher on the whole. We also highlight that the profit gap between this optimal mechanism, and the mechanism consisting of
applying the prices from Section 4 separately to each item, is λ3((2
√ 2−3)λ+2 √ 2)
6(λ+1)(2λ+1)2 . For λ = 1 this gives about
a 10% increase in profit; for λ = √ 2 3 the increase is highest at 11.4% – a fairly substantial improvement in profit. 5.3 further conjectures via differentiable economics We have presented a family of optimal market maker mechanisms for independent, uniformly distributed items, parameterized by the strength of adverse selection. These mechanisms make use of mixed bundling behavior and we are able to construct dual certificates establishing optimality. To showcase the flexibility of differentiable economics, we also train models on a much wider range of valuation distributions. The resulting mechanisms display an interesting range of behavior and we conjecture they are optimal. Asymmetric noise trading case The above examples all considered the setting where the initial belief of the market maker is centered at ( 12 , 1 2 ), resulting in a symmetric mechanism. We also consider the case where the initial belief is centered at (13 , 1 3 ) (again for the case where the type distribution is uniform). The result of training a mechanism is shown in Figure 5. Based on this solution, and our knowledge of the dual problem as well as knowledge of the points where bidders must be indifferent between two items, we conjecture (calculations in Appendix E) an analytic form for this mechanism, whose menu is shown in Table 3.Here, we observe qualitatively different market maker behavior: note that the items are bought separately or together (i.e. mixed bundling when the mechanism buys), or bundled with the sale of the other item, but not sold separately (i.e., if the trader only wants to purchase, the only choice is the grand bundle). A three dimensional mechanism So far we have focused on two-good settings, in which optimal mechanisms already display interesting behavior. Our problem setting is well-defined for any number of goods and we also train a three-good mechanism, as visualized in Figure 6. Two dimensional cross-sectional slices for much of the type space have the same structure as the optimal mechanisms in Section 5.2, although towards the boundaries of the type space the structure changes. The result has extremely interesting and complex structure—a no-trade truncated octahedron (a 14-face polyhedron) in the center, and bundling of all combinations of three goods (buying and selling), along with separate offers for individual goods, but no bundles of two goods. Beta distribution: infinite menu size In the multiple-good monopolist problem, it is well-known that optimal mechanisms under a beta distribution may show infinite menu size [14]; in other words, the convex utility function may not be piecewise linear. We train RochetNet under the no-adverse-selection model with c = ( 12 , 1 2 ), on both Beta(2,1) and Beta(2,2) distributions. Shown in Figure 7 and Figure 8, the resulting allocation rules approximate a continuously varying allocation. For the asymmetric distribution, the mixture only takes place for types that have relatively high valuations in one of the goods. Truncated normal distribution: an interestingly boring mechanism We also consider a normal distribution centered and truncated to fit within the type space. Here, the learned mechanism, shown in Figure 9, is interesting because unlike the other mechanisms we have presented, it is relatively simple. It is essentially a “grand bundling” strategy, making an all-or-nothing offer of the bundle of all goods for some fixed price, albeit with four grand bundles, one for each combination of buying and selling. 7 conclusion We analyze market-making across multiple goods in the face of adverse selection. In the settings we study, the market maker has the capacity to buy and sell different bundles at different prices, as well as to accept sales of goods “in kind” in lieu of money. We show that the problem of maximizing profit under adverse selection is dual to an optimal transport problem. Using our framework, we produce dual certificates for known single-good mechanisms and then show how to use differentiable economics to search through the space of mechanisms in settings with multiple goods, in order to generate conjectures for optimal mechanisms. Based on some of these conjectures, we derive optimal mechanisms and dual certificates. From an economics perspective, our results establish that in some cases, the optimal mechanism for market makers who work across multiple goods must involve making use of their capacity to bundle and to accept goods “in kind”, resulting in significant improvements in profit. Further conjectured optimal mechanisms in a range of other cases which show a variety of additional complex behaviors including offers of a continuous spectrum of allocations. This is by contrast with the single-good case, where a much simpler bid-ask spread is optimal. It is common in practice to restrict market makers to these simple mechanisms, even when there are multiple goods; our model and results suggest this imposes a cost on them. From a methodological perspective, we provide theoretical results for another area in the relatively underexplored field of multi-parameter mechanism design, and we show how differentiable economics can be used to guide theory in otherwise very challenging settings. We also hope that these techniques can lead to the design of better market-making mechanisms which will actually be deployed. a connection to constant-function market makers Angeris et al. [5] defines constant-function market makers in terms of a concave portfolio value function and a conjugate trading function. The portfolio value function V (x) is the value that the market maker expects to retain in their portfolio after an arbitrageur, who knows the correct price vector x, engages in a trade. The trading function ΨV (R) remains constant for any portfolio that could be the result of a feasible trade; ΨV (R) = − supx(−xTR− (−V )(x)) = −(−V )∗(−R). Angeris et al. [5] require that V (x) is 1-homogeneous; rather than treating payments separately, one good is treated as the numeraire with fixed value normalized to 1. Because V (x) is 1-homogeneous, ΨV (R) = −(−V )∗(−R) represents the negative indicator function for a convex set of feasible reserves [43]. Thus there is a close connection between the portfolio value and trading functions, and our formulation of a trader utility u(x) and a menu u∗(a). For some initial reserves r0, u(x) = x
T r0−V (x) (there is some surplus which, after a trade, will be divided between the market maker and trader). When u is 1-homogeneous and one good is chosen to be the numeraire, u∗(a) will be either 0 or ∞ (denoting whether a trade is possible or not). In our case, we instead allow the output u∗(a) to denote a price for trade a, reducing the dimensionality of the valuation vector by 1. Separately and similarly, Frongillo et al. [20] shows a connection between CFMMs and scoring rules for prediction markets. b proofs of duality lemmas First, we go from an expression for expected profit which involves ∇u(x) to one that only involves u, proving Lemma 3.1. The calculation mainly involves repeated application of integration by parts, which we include in extreme detail in this appendix. Proof of Lemma 3.1. First, we can start with the expression for expected profit and slightly rewrite it.∫ X (∇u(x) · (x− π(c, x))− u(x)) f(x) dx
= ∫ X ( n∑ i=1 ( ∂u ∂xi ) (xi − πi(ci, xi))− u(x) ) f(x) dx
= n∑ i=1 ∫ X (( ∂u ∂xi ) (xi − πi(ci, xi)) ) f(x) dx− ∫ X u(x)f(x) dx. (9)
Now consider the first term in 9, and pick out the summand for any index i. We have∫ X (( ∂u ∂xi ) (xi − πi(ci, xi)) ) f(x) dx
= ∫ X−i (∫ Xi ∂u ∂xi xif(x) dxi − ∫ Xi ∂u ∂xi (πi(ci, xi)f(x)) dxi ) dx−i. (10)
Applying integration by parts to these terms, with Xi = [0, bi] we get∫ Xi ∂u ∂xi xif(x) dxi = u(x)xif(x)|xi=bi0 − ∫ bi 0 u(x) [ ∂ ∂xi (xif(x)) ] dxi
= biu(bi, x−i)f(bi, x−i)− ∫ bi 0 u(x) ( xi ∂f ∂xi + f(x) ) dxi. and likewise∫ Xi ∂u ∂xi πi(ci, xi)f(x) dxi = u(x)πi(ci, xi)f(x)|xi=bi0 − ∫ bi 0 u(x) [ ∂ ∂xi (πi(ci, xi)f(x)) ] dxi
=u(bi, x−i)πi(ci, bi)f(bi, x−i)− u(0, x−i)πi(ci, 0)f(0, x−i) − ∫ bi 0 u(x) ( πi(ci, xi) ∂f ∂xi + f(x) ∂πi(ci, xi) ∂xi ) dxi. Putting these back into the expression in 10, and distributing through the ∫ X−i
, we end up with∫ X−i u(bi, x−i)(bi − πi(ci, bi))f(bi, x−i) dx−i − ∫ X−i −u(0, x−i)πi(ci, 0)f(0, x−i) dx−i
+ ∫ X (πi(ci, xi)− xi)u(x) ∂f ∂xi dx+ ∫ X u(x)f(x) ( ∂πi(ci, xi) ∂xi − 1 ) dx. for any choice of index i. Putting these terms back inside the sum in 9, we get
n∑ i=1 ∫ X (( ∂u ∂xi ) (xi − πi(ci, xi)) ) f(x) dx− ∫ X u(x)f(x) dx
= n∑ i=1 (∫ X−i u(bi, x−i)(bi − πi(ci, bi))f(bi, x−i) dx−i − ∫ X−i −u(0, x−i)πi(ci, 0)f(0, x−i) dx−i ) +
n∑ i=1 ∫ X (πi(ci, xi)− xi)u(x) ∂f ∂xi dx+ n∑ i=1 ∫ X u(x)f(x) ( ∂πi(ci, xi) ∂xi − 1 ) dx− ∫ X u(x)f(x) dx
=...+ n∑ i=1 ∫ X u(x)f(x) ( ∂πi(ci, xi) ∂xi − 1 ) dx− ∫ X u(x)f(x) (1) dx
=...+ n∑ i=1 ∫ X u(x)f(x) ( ∂πi(ci, xi) ∂xi ) dx− (n+ 1) ∫ X u(x)f(x) dx
= n∑ i=1 (∫ X−i u(bi, x−i)(bi − πi(ci, bi))f(bi, x−i) dx−i − ∫ X−i −u(0, x−i)πi(ci, 0)f(0, x−i) dx−i ) +
∫ X u(x)(∇f(x) · (π(c, x)− x)) dx+ n∑ i=1 ∫ X u(x)f(x) ( ∂πi(ci, xi) ∂xi ) dx− (n+ 1) ∫ X u(x)f(x) dx
= n∑ i=1 (∫ X−i u(bi, x−i)(bi − πi(ci, bi))f(bi, x−i) dx−i − ∫ X−i −u(0, x−i)πi(ci, 0)f(0, x−i) dx−i ) +∫
X u(x)(∇f(x) · (π(c, x)− x)) dx+ ∫ X u(x)f(x)divπ(c, x) dx− (n+ 1) ∫ X u(x)f(x) dx. There are four terms in this sum. The first term can be expressed as a surface integral around X =∏ i[0, bi]. Each of the remaining terms is an integral of u(x) against some density, and we can combine these together. After this transformation, we can re-express the above as an integral ∫ u dµ′ against a measure µ′, where
µ′(A) = ∫ ∂X IA(x)f(x)(x− π(c, x)) · n̂ dx
− ∫ X IA(x)(∇f(x) · (x− π(c, x)) + (n+ 1− div π(c, x))f(x)) dx. This relationship holds for any u. However, we can plug in u(x) = 1 and, after some calculation, find that µ′ integrates to ∫
X (∇u(x) · (x− π(c, x))− u(x)) f(x) dx = ∫ X (0− 1)f(x) dx = ∫ dµ′ = −1. It will be more convenient to construct a measure µ that integrates to zero, so that when we split µ = µ+−µ−, we face a balanced optimal transport problem between µ+ and µ−. We can take advantage of the fact that for our problem, feasible u have u(c) = 0, and let µ(A) = µ′(A) + IA(c), observing ∫ u dµ = ∫ u dµ′ for such feasible u. Our final measure is thus
µ(A) = ∫ ∂X IA(x)f(x)(x− π(c, x)) · n̂ dx
− ∫ X IA(x)(∇f(x) · (x− π(c, x)) + (n+ 1− div π(c, x))f(x)) dx+ IA(c). (3)
In conclusion,∫ X (∇u(x) · (x− π(c, x))− u(x)) f(x) dx = ∫ u dµ = ∫ u dµ+ − ∫ u dµ−. for any feasible u. Proof of lemma 3.3. First, we rewrite the dual problem in an unconstrained form, proceeding in essentially the same manner as all prior work. inf γ:γ1⪰µ+,γ2⪯µ−
∫ ∥x− y∥1 dγ(x, y) = inf
γ Θ∗(γ)− Ξ∗(γ),
where
Θ∗(γ) =
{∫ ∥x− y∥1 dγ(x, y) if γ ∈ Radon+(X × X )
+∞ , otherwise. and
Ξ∗(γ) = { 0 if γ1 ⪰ µ+, µ− ⪰ γ2 −∞ , otherwise. . We will apply Fenchel-Rockafellar duality [47], which states that supf Ξ(f)−Θ(f) = infγ Θ∗(γ)−Ξ∗(γ) for concave Ξ, and convex and continuous Θ. The ∗ operation is the (convex or concave) conjugate. By directly taking the conjugate of Θ∗, we can find
Θ∗∗(f) = { 0 if f(x, y) ≤ ∥x− y∥1 +∞ , otherwise. This function is proper and convex, and closed because the domain of feasible f is a convex set. Therefore it is legitimate to refer to Θ = Θ∗∗. We propose Ξ∗∗ = Ξ as the closed and concave function,
Ξ∗∗(f) =
{∫ ϕdµ+ − ∫ ψ dµ− ∃ϕ, ψ ∈ U◦ : ϕ(x)− ψ(y) = f(x, y)
−∞ , otherwise,
where U◦ is the cone generated by positive scaling of elements of U . This function is proper and concave, and is closed because the domain of feasible f , {f | ∃ϕ, ψ ∈ U◦ : f(x, y) = ϕ(x) − ψ(y)} is a closed convex set. Taking the conjugate again, Ξ∗∗∗ is in fact Ξ∗:
Ξ∗∗∗(γ) = inf f
∫ f(x, y) dγ(x, y)− Ξ∗∗(f)
= inf ϕ,ψ∈U◦
∫ ϕ(x) dγ1(x)− ∫ ψ(y) dγ(y)− ∫ ϕ(x) dµ+ + ∫ ψ(y) dµ−
=
{ 0 γ1 ⪰ µ+, γ2 ⪰ µ−
−∞ else
=Ξ∗(γ). (If γ1 ⪰ µ+ does not hold, this implies there must exist some ϕ for which the integrals are negative; and this can be scaled arbitrarily to −∞. Likewise for γ2, µ− and ψ. This allows the transformation from an unconstrained to constrained problem.) For the same reasons as in Kash and Frongillo [25], Θ is continuous at f(x, y) = −1, Θ(f) = 0, and Ξ(f) = − ∫ dµ−, so the preconditions for Fenchel-Rockafellar duality are satisfied. At this point, we now have a dual of
sup ϕ(x)−ψ(y)≤∥x−y∥1,ϕ,ψ∈U◦
∫ ϕdµ+ − ∫ ψ dµ− = sup
f Ξ(f)−Θ(f) = inf γ Θ∗(γ)− Ξ∗(γ). c noise trading (no adverse selection) in 2 dimensions We consider in §5.2 a pure noise trading case where the mechanism designer has a fixed belief c = ( 12 , 1 2 ), which corresponds to setting λ = 1 in the linear belief update model. Here we detail the calculations of the transport cost of the optimal transport plan for the dual problem. Figure 10 visualizes the signed measure for the optimal transport dual problem for this specific case. There is a point mass of 1 at ( 12 , 1 2 ), a uniformly distributed mass of 1 2 at each of the four edges of the unit square, and a −3 mass uniformly distributed over the square. The solution to the dual problem is the minimum transport cost to move the positive mass so that the positive and negative mass cancel each other and the net mass is zero everywhere. Note that the transport cost here is defined with respect to the Manhattan distance of any mass movement, i.e., measuring the sum of horizontal movement and vertical movement when calculating the transport cost of any movement. As moving positive mass and moving negative mass are symmetric, we can consider the optimal solution in the solution space where only the positive masses are moved to cancel out the uniform negative mass over the unit square. Based on the learned solution in Fig. 2 (top row), we can conjecture the structure of the optimal mechanism and thus the structure of the optimal transport plan, which involves partitioning the type space into separate regions including one octagonal region with zero transport cost, four equivalent rectangular regions, and four equivalent pentagonal regions. Fig. 3, right, shows the optimal transport for one of the four equivalent rectangles. There is a positive on edge JK, and it is moved upward to uniformly cover the rectangle HIJK. The transport cost of one rectangle is therefore C (R) 1 = ∫ b1 0 ( 1−2a1 2 ) 1 b1 xdx = (1−2a1)b14 . Fig. 3, middle, shows the optimal transport for one of the four equivalent pentagons. There is a positive mass on edges AB and BD. The positive mass at edge AB is moved downward to uniformly cover rectangle ABCF, the positive mass at edge CD is moved leftward to uniformly cover rectangle CDEG, and the positive mass at edge BC is moved to cover uniform triangle EFG. The transport cost for rectangle ABCF is∫ b1
0
(a1 2 ) 1 b1 xdx = a1b1 4 . The transport cost for rectangle CDEG is∫ b1 0 ( a1 − b1 2 ) 1 b1 xdx = (a1 − b1)b1 4 . For the triangle EFG, the positive mass at edge BC is first moved to point C, then moved to point G, and finally moved to uniformly cover triangle EFG. This is the optimal way to transport the mass as the cost is with respect to the Manhattan distance of movements. Adding the costs of these three transport steps together, the transport for triangle EFG is(∫ b1
0
1 2 xdx
) + ( b1 2 b1 ) + (∫ a1−b1 0 ∫ a1−b1−x 0 ( b1 2 )( 2 (a1 − b1)2 ) (x+ y)dydx ) = 3b21 4 + (a1 − b1)b1 3 . The total transport cost of the pentagon is
C (P ) 1 = a1b1 4 + (a1 − b1)b1 4 + 3b21 4 + (a1 − b1)b1 3 = (5a1 + b1)b1 6 . d linear belief update in 2 dimensions Here, we show the full derivation for a more general case where the mechanism designer has an initial belief of c and updates their belief by linearly interpolating after one trade, so that π(c, x) = λc+(1−λ)x, λ ∈ [0, 1]. We give a family of transport plans parameterized by λ, which match a family of mechanisms parameterized by λ.
D.1 Constructing the transformed measure
The transformed measure (Eq. 1) for this case is:
• −(2λ+ 1) mass distributed uniformly. • A +1 point mass at c.
• Mass of +(1− c1)λ on the right boundary, +(1− c2)λ on the top boundary, +c1λ on the left boundary, and +c2λ on the bottom boundary. The positive and negative masses each have magnitude 2λ + 1. The measure for the case where c = ( 12 , 1 2 ) is visualized in Fig. 1 (right). D.2 Conjecture for optimal mechanism
Consider the case where c = ( 12 , 1 2 ) . We first train a model to maximize profit. Fig. 2 visualizes the learned mechanisms when varying the value of λ. Similar to the noise trading case, we use the learned solution, as well as our knowledge of the problem setting, to conjecture the structure of the optimal mechanism. The optimal mechanism should be deterministic, offer 8 menu items in addition to the no-trade option, and should be symmetric. D.3 Constructing a dual certificate
Partitioning the type space As in the noise trading case, the solution to the dual problem is the minimum transport cost to move the positive mass and cancel out the negative mass perfectly and the optimal transport plan involves partitioning the type space into separate regions including an octagonal notrade region in the center, four equivalent rectangular regions, and four equivalent octagonal regions. The minimal total transport cost is the sum of the minimal transport cost for each of the partitioned regions. Fig. 11 shows the optimal partition in this case with a linear belief update. In the optimal transport solution, the +1 point mass at c = ( 12 , 1 2 ), according to our definition of ⪰, can be spread outward (away from c) to uniformly cover the octagonal region at the center, at zero cost. In addition to the octagon, there are four equivalent rectangles and four equivalent pentagons. Each of the rectangles and pentagons contains a part of the four outer edges of the unit square, and the positive mass on that part of the edge gets distributed uniformly over the rectangle or pentagon to cancel out the negative mass. The total transport cost is therefore
Cλ = 4C (R) λ + 4C (P ) λ ,
where C (R) λ is the transport cost of one rectangle, C (P ) λ is the transport cost of one pentagon, and the subscript λ represents the linear update parameter. Transport plan We parameterize the partition in terms of lengths aλ and bλ. Fig. 12, right, shows the optimal transport for one of the four equivalent rectangles. There is a positive on edge JK, and it is moved upward to uniformly cover the rectangle HIJK. The transport cost of one rectangle is therefore
C (R) λ = ∫ bλ 0 λ 2 (1− 2aλ) 1 bλ xdx = λ(1− 2aλ)bλ 4 . Fig. 12, left, shows the optimal transport for one of the four equivalent pentagons. There is a positive mass on edges AB and BD. The positive mass at edge AB is moved downward to uniformly cover rectangle ABCF, the positive mass at edge CD is moved leftward to uniformly cover rectangle CDEG, and the positive mass at edge BC is moved to cover uniform triangle EFG. The transport cost for rectangle ABCF is∫ bλ
0
( λaλ 2 ) 1 bλ xdx = λaλbλ 4 . The transport cost for rectangle CDEG is∫ bλ 0 λ 2 (aλ − bλ) 1 bλ xdx = λ(aλ − bλ)bλ 4 . For the triangle EFG, the positive mass at edge BC is first moved to point C, then moved to point G, and finally moved to uniformly cover triangle EFG. This is the optimal way to transport the mass as the cost is with respect to the Manhattan distance of movements. Adding the costs of these three transport steps together, the transport for triangle EFG is(∫ bλ
0
λ 2 xdx
) + ( λbλ 2 bλ ) + (∫ aλ−bλ 0 ∫ aλ−bλ−x 0 ( λbλ 2 )( 2 (aλ − bλ)2 ) (x+ y)dydx ) = 3λb2λ 4 + λ(aλ − bλ)bλ 3 . The total transport cost of the pentagon is
C (P ) λ = λaλbλ 4 + λ(aλ − bλ)bλ 4 + 3λb2λ 4 + λ(aλ − bλ)bλ 3 = λ(5aλ + bλ)bλ 6 . Solving for aλ and bλ The structure of the transport plan constrains the values of aλ and bλ. There is a positive mass on edge JK of length 1 − 2aλ, and as the mass density per unit length of the edge is λ2 , the mass is λ(1−2aλ)2 . This mass is moved upward to be distributed uniformly over the rectangle HIJK and should perfectly cancel out the negative mass in the rectangle. The density of the initial negative mass over the rectangle HIJK is −(2λ + 1)(1 − 2aλ)bλ, and because it should perfectly cancel out the positive mass λ(1−2aλ)
2 , we have
λ(1− 2aλ) 2 − (2λ+ 1)(1− 2aλ)bλ = 0. (11)
The positive mass on edge BC is λbλ2 , and the negative mass on triangle EFG is − (2λ+1)(aλ−bλ)2
2 . As these two masses should perfectly cancel out each other, we have
λbλ 2 − (2λ+ 1)(aλ − bλ) 2 2 = 0. (12)
Similarly, the positive mass on edge AB is λaλ2 , and the negative mass on rectangle ABCF is −(2λ+1)aλbλ. As these two masses should perfectly cancel out, we have
λaλ 2 − (2λ+ 1)aλbλ = 0. (13)
Combining equations Eq. 11, Eq. 12, and Eq. 13, the values of aλ and bλ can be solved:
aλ = (1 +
√ 2)λ
4λ+ 2 , bλ =
λ
4λ+ 2 . Computing the menu The boundary between two regions is the point where a trader is indifferent between the two menu items. At any trader type on a boundary, we can easily calculate the welfare of the two neighboring allocations, and infer the price that would make the trader indifferent. The resulting menu is given in Table 2 and visualized (with a specific value of λ = 12 ) in Fig. 13. The total transport cost for this case with linear belief update is
Cλ = 4C (R) λ + 4C (P ) λ = 4 · λ(1− 2aλ)bλ 4 + 4 · λ(5aλ + bλ)bλ 6
= λ2 (( 9 + 2 √ 2 ) λ+ 3 ) 6(2λ+ 1)2 . (14)
which exactly matches the expected profit of the optimal menu, so our solutions are optimal. e noise trading in 2 dimensions with an off-center belief We now consider another pure noise trading case which corresponds to the setting λ = 1 in the linear update model. Unlike in §C, the mechanism designer in this case has an off-center belief of c = ( 13 , 1 3 ). E.1 Constructing the transformed measure
The transformed measure (Eq. 1) for this case is:
• −(2λ+ 1) = −3 mass distributed uniformly. • A +1 point mass at c = ( 13 , 1 3 ). • Mass of +(1− c1)λ = + 23 on the right boundary, +(1− c2)λ = + 2 3 on the top boundary, +c1λ = + 1 3
on the left boundary, and +c2λ = + 1 3 on the bottom boundary. The positive and negative masses each have magnitude 3. The measure is visualized in Fig 14. E.2 Conjecture for optimal mechanism
We first train RochetNet to maximize profit in this case. The allocation rules for the mechanism after training are shown in Fig. 5. Similar to §C and §D, we use the RochetNet solution, as well as our knowledge of the problem setting, to conjecture the structure of the optimal mechanism. The optimal mechanism should be deterministic and should be symmetric with respect to the two items. The RochetNet solution suggests that the optimal mechanism offers 6 menu items in addition to the no-trade option. Partitioning the type space The dual problem is the optimal transport according to the transformed measure in §E.1 and the optimal transport plan involves partitioning the type space into separate regions. Based on the RochetNet solution, we conjecture the partitioned regions in Fig. 15, which consist of a central hexagonal no-trade region, two rectangular regions, and four pentagonal regions. In the optimal transport solution under our conjecture, the +1 point mass at c = ( 13 , 1 3 ), according to our definition of ⪰, can be spread outward (away from c) to uniformly cover the hexagonal region at the center, at zero cost. In addition to the hexagon, there are two equivalent rectangular regions, and we denote this shape with R. There are two equivalent pentagonal regions at top left and bottom right, which we denote with P1. We denote the smaller pentagonal region at bottom left with P2, and the larger pentagonal region at top right with P3. Each of the rectangles and pentagons contains a part of the four outer edges of the unit square, and the positive mass on that part of the edge gets distributed uniformly over the rectangle or pentagon to cancel out the negative mass. Solving for a, b, d, e, and f The structure of the transport plan constrains the values of a, b, d, e, and f . For the rectangular shape R illustrated with rectangle HIJK, there is a positive mass of 1−a−f3 on edge JK. This mass is moved upward to be distributed uniformly over the rectangle HIJK and should perfectly cancel out the negative mass of −3b(1− a− f) in the rectangle. Therefore, we have
1− a− f 3 − 3b(1− a− f) = 0. (15)
For the pentagonal shape P1 illustrated with pentagon STVWX, there is a positive mass of 2d 3 on edge ST and a positive mass of f3 on edge TV. They should cancel out the negative mass of −3 ( df − (d−b)(f−e)2 ) perfectly. That is,
2d 3 + f 3 − 3
( df − (d− b)(f − e)
2
) = 0. (16)
Similarly, for the pentagonal shape P2, it should hold that
a 3 + a 3 − 3
( a2 − (a− b) 2
2
) = 0. (17)
For the pentagonal shape P3, we have
2(1− d) 3 + 2(1− d) 3 − 3
( (1− d)2 − (1− d− e) 2
2
) = 0. (18)
Consider the point X = (1 − e, d) in Fig. 15. The fact that this point lies on the boundary between the central no-trade region and the bottom right pentagonal region implies that a trader with the type (1− e, d) is indifferent to whether making no trade at all, or getting the allocation of (+1,−1) and making the corresponding payment. Assume the payment for the allocation (+1,−1) is p. Therefore, it holds that
(+1) · (1− e) + (−1) · d− p = 0. (19)
Similarly, we can get the following equation by considering the point W = (1− f, b) in Fig. 15:
(+1) · (1− f) + (−1) · b− p = 0. (20)
Additionally, we have the following constraints
0 ≤ a, b, d, e, f ≤ 1, e < f, 1− a− f > 0. (21)
Combining equations Eq. 15, Eq. 16, Eq. 17, Eq. 18, Eq. 19, Eq. 20, and Eq. 21, the values of a, b, d, e, and f can be solved:
a = 1 +
√ 2
9 , b =
1 9 , d = 1 63
( 25− 6 √ 2 + 2 √ 134− 82 √ 2 ) , (22)
e = 1
63
( 26 + 24 √ 2− 2 √ 310 + 214 √ 2 ) , f = 1
63
( 44 + 18 √ 2− 4 √ 74 + 22 √ 2 ) . (23)
Computing the menu The boundary between two regions is the point where a trader is indifferent between the two menu items. At any trader type on a boundary, we can easily calculate the welfare of any two neighboring allocations, and infer the price that would make the trader indifferent between them. The resulting menu is given in Table 3 and visualized in Fig. 17.