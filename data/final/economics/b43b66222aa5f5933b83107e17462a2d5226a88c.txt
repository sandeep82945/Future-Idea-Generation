Fair distribution of indivisible tasks with non-positive valuations (aka chores) has given rise to a large body of work in recent years. A popular approximate fairness notion is envy-freeness up to one item (EF1), which requires that any pairwise envy can be eliminated by the removal of a single item. While an EF1 and Pareto optimal (PO) allocation of goods always exists and can be computed via several well-known algorithms, even the existence of such solutions for chores remains open, to date. We take an epistemic approach utilizing information asymmetry by introducing dubious chores – items that inflict no cost on receiving agents, but are perceived costly by others. On a technical level, dubious chores provide a more fine-grained approximation of envy-freeness—compared to relaxations such as EF1—which enables progress towards addressing open problems on the existence and computation of EF1 and PO. In particular, we show that finding allocations with optimal number of dubious chores is computationally hard even for highly restricted classes of valuations. Nonetheless, we prove the existence of envy-free and PO allocations for n agents with only 2n− 2 dubious chores and strengthen it to n− 1 dubious chores in four special classes of valuations. Our experimental analysis demonstrate that baseline algorithms only require a relatively small number of dubious chores to achieve envy-freeness in practice. 1 introduction Fair allocation of resources and tasks is one of the most fundamental necessities in any economy. It has garnered attention of diverse communities ranging from computer science and artificial intelligence to social sciences and economics due to its broad applicability in healthcare, charitable donations, waste management, and task allocation [Budish, 2011, Goldman and Procaccia, 2015, Aleksandrov et al., 2015, Parkes et al., 2015, Budish et al., 2017, Benabbou et al., 2020, Tan et al., 2021, Pathak et al., 2021]. Traditionally, this field is concerned with allocating indivisible items that are positively-valued by agents (i.e. goods). However, in many practical applications decisions must be made on how to distribute indivisible negatively-valued tasks (i.e. chores). The allocation of chores is fundamentally different from its goods counterpart since chores must be fully allocated, whereas goods may be disposable at no cost. Moreover, algorithmic techniques and axiomatic approaches developed for fair allocation of goods do not immediately translate to this setting. Thus, in recent years a large body of work has focused on investigating fairness axioms and algorithmic techniques for allocating chores in a fair and efficient manner [Freeman et al., 2020, Aziz et al., 2017, Chaudhury et al., 2020, Bogomolnaia et al., 2019, Hosseini et al., 2022a]. Take one of the most well-studied relaxations of envy-freeness (EF) [Foley, 1967], i.e. envy-freeness up to one item (EF1) [Lipton et al., 2004, Budish, 2011], which requires that any pairwise envy between the agents can be eliminated by the (hypothetical) removal of a single item (a good from the envied agent
ar X
iv :2
30 5. 02 98
6v 2
[ cs
.G T
] 5
M ay
or a chore from the envious agent). When dealing with goods, an EF1 allocation always exists and can be computed efficiently along with economic efficiency notions such as Pareto optimality (PO) [Caragiannis et al., 2019a, Barman et al., 2018]. In contrast, for chores, not only computing an EF1 and PO allocation is unknown, but even the existence of such allocations remains open, to date, leading to numerous works focusing on restricted domains [Garg et al., 2022b, Aziz et al., 2022a, Ebadian et al., 2022].1
We take a rather different direction and focus on information asymmetry, and thus, does not require counterfactual removal of items as in EF1. Our epistemic approach is based on introducing copies of chores that bear no cost on the receiving agents (i.e. dubious chores) to eliminate envy. Formally, we propose a fairness notion called envy-freeness up to k dubious chores (DEF-k) defined as follows. Consider n agents and m chores and an allocation A = (A1, . . . ,An). Suppose there is a multiset D of k copies of the original m chores (called dubious chores) that can be assigned to agents, i.e. AD = (AD1 , . . . ,ADn ), such that they do not incur any additional cost on the receiving agent, but other agents perceive them as costly. In other words, each agent h only incurs the cost associated to the original allocation, i.e. vh(Ah)+vh(ADh ) = vh(Ah) while any other agent i ≠ h observes h’s valuation as vi(Ah)+vi(ADh ). If under this augmented allocation, every agent prefers its own allocation to the perceived allocations of others (i.e. vi(Ai) ≥ vi(Ah)+ vi(ADh ) for every pair of agents i, h), then we say that the allocation is envy-free up to k dubious chores (DEF-k). Intuitively, by introducing the k dubious chores, allocation A is made free of envy. Let us illustrate this notion through an example. Example 1. Consider three housemates–Ali, Bo, and Chan– splitting apartment chores of doing the laundry, taking out the trash, and vacuuming. Table 1 illustrates their valuations. The allocation shown via (full) circles is EF1 since pairwise envy of Bo and Chan to Ali can be eliminated removing of a chore of the envious agent. However, removing these chores, will cause Ali to envy the others, resulting in none of the chores to be completed.2 Nonetheless, this allocation can be made envy-free by introducing a single dubious chore by assigning Ali to do an additional vacuuming chore, say midweek, at no additional cost to Ali (denoted by dotted circle). Hence the allocation becomes DEF-1 because the other two agents observe Ali’s chores valued at −4. Observe that while this approach can be interpreted as the number of times in a week an agent does a chore, it is radically different from the introducing actual duplicates [Aleksandrov, 2022, Gorantla et al., 2022, Gafni et al., 2021, Kroer and Peysakhovich, 2019, Biswas and Barman, 2018] for two reasons: (i) duplicates introduce real additional cost on the receiving agents, causing overall reduction in the welfare, say (un)happiness, of the society of agents, and (ii) a large number of duplicate chores may be needed to eliminate envy. In the above example, three copies of each chore must be added to completely eliminate envy: Ali must get a copy of trash or vacuuming to eliminate the envy of Bo and Chan, but Bo and Chan must each get copies of laundry to offset the introduced envy of Ali. This approach is in line with the literature on epistemic fair division of goods where underlying allocations are partially hidden [Aziz et al., 2018] or information is withholding about a small subset of goods
1EF1 allocations without efficiency requirements can be computed in polynomial time [Aziz et al., 2022a, Bhaskar et al., 2021]. 2Observe that the circled allocation is a solution returned by the well-studied RoundRobin algorithm (detailed in Section 3). [Hosseini et al., 2020, Bliznets et al., 2023]. Similarly, the introduction of (a small number of) dubious chores provides a framework for achieving fairness without hiding the underlying allocation in its entirety, and thus, compromising transparency. 1.1 our contributions We propose a novel fairness notion called DEF-k that utilizes information asymmetry by introducing dubious chores, i.e. items that are perceived as costly but inflict no actual cost on the receiving agent. Conceptually, dubious chores provide a natural approach to reach a compromise when no envy-free solution exist, e.g. by asking an agent to do a chore twice. On the technical level, DEF-k provides a more finegrained approximation of envy-freeness—compared to relaxations such as EF1—which enables progress towards addressing open problems in fairly allocating indivisible chores, for example, the existence and computation of EF1 and PO. As such, we make the following contributions:
• We show the hardness of finding the minimal k for which DEF-k exists and even the hardness of its constant approximation (Corollary 1), but despite this we obtain that DEF-(n − 1) allocation always exists and can be computed efficiently (Theorem 2). • Under additive valuations, we achieve both fairness and efficiency by showing that allocations satisfying DEF-(2n − 2) and Pareto optimality always exist (Theorem 3). Furthermore, we explore several well-studied restricted domains for which EF1 and PO allocations exist and can be computed efficiently. In particular, we show that while a DEF-(n − 1) and PO allocation can be computed via well-studied algorithms under identical and binary valuations (Theorem 5). When valuations are bivalued (Theorem 6) or chores are restricted to two-types (Theorem 7), DEF-(n − 1) and PO allocation always exist and can be computed in polynomial time through two variants of the Fisher market algorithm. • Our empirical investigation demonstrates that allocations requiring small numbers of dubious chores to become envy-free can be found in polynomial time with the RoundRobin procedure. This beats the theoretical existence of a DEF-(n − 1) allocation by half. We further demonstrate that our fairness notion correlates well with Pareto optimal efficiency, as optimal PO allocation require very few dubious chores to become envy-free. 2 related work While the literature on fair division of indivisible items is vast (see e.g. Amanatidis et al. [2022] for a survey), our work fits best in the context fairness and efficiency for specified preference classes, and fairness achieved by modifying instances or epistemic constraints. See Section 3 for formal definitions. All related works hold for additive valuations. Fairness and Efficiency of Indivisible Items. For goods instances and general valuations, Murhekar and Garg [2021] identify a pseudo-polynomial time algorithm for computing EF1 and fractional PO (fPO), a generalization of PO extended to fractional allocations, that extends to polynomial time upon fixing the number of agents or number of different values agents have over goods. This improves Aziz et al. [2022a] and Barman et al. [2018]’s algorithms, which are polynomial time for two agents with general valuations and when valuations are bounded, respectively. For bivalued goods, Garg and Murhekar [2021] identify a polynomial time algorithm for computing EFX, a strict generalization of EF1, and fPO, whereas Gorantla et al. [2022]’s polynomial time algorithm computes EFX. Garg et al. [2022b] identify polynomial time algorithms identifying EF1+fPO for two-type agents – populations in which every agent has one of two utility functions. Still, computing EF1+PO in polynomial time for the general goods case remains an open question. For chores instances, Garg et al. [2022a] and Ebadian et al. [2022] independently identify polynomial time algorithms computing EF1 and PO allocations when the agents have valuations that take only two different values. On the other hand, Aziz et al. [2022b] provided an algorithm to compute such allocations in the cases when there are only two types of chores. Garg et al. [2022b] further identify polynomial time algorithms that compute an allocation that is EF1 and PO for either three agents, two-type agents, or personalized bivalued chores instances—bivalued chores in which agents may have different values—with different enough valuations. Fair division of goods with copies. Gorantla et al. [2022] prove that EF allocations exists if the multiplicity of goods is sufficiently large enough. Gafni et al. [2021] show that if n ≥ 3 agents are restricted to only receiving one of each copy of good, EFX may not exist. They further provide existence correspondences of fairness notions between goods with copies and chores. Kulkarni et al. [2021] utilize a correspondence between good copies and chores in their PTAS for computing the maximin share of some instances with mixed-valued items. Kroer and Peysakhovich [2019] and Biswas and Barman [2018] also consider fair division under cardinality constraints. Epistemic EF. Research in epistemic relaxations of EF studies agents that have limited information about allocations of indivisible goods. Aziz et al. [2018], and Caragiannis et al. [2022] define epistemic envyfreeness and EFX that characterizes allocates in which, based on only information about their own bundle, each agent believes it is possible that the remaining allocation satisfies EF or EFX. Thus, each agent’s view may be substantially different from each other or the real underlying allocation. In contrast, Hosseini et al. [2020]’s hidden envy-freeness notion supposes that each agent agrees on the visible information, but their belief about what’s hidden may differ. Other epistemic fair division works include a Bayesian approach to incomplete information [Chen and Shah, 2017], a generalization of maximin share [Chan et al., 2019], and where agents only compare their values to their neighbors on a social network [Abebe et al., 2016, Bei et al., 2017, Chevaleyre et al., 2017, Beynier et al., 2019, Bredereck et al., 2022]. Bliznets et al. [2023] combines these approaches to study envy-freeness for agents embedded in a social network and who can hide at most one good in their allocation, and at most k goods are hidden. 3 preliminaries Problem instance. An instance I = ⟨N ,M,V⟩ of the fair division problem is defined by a set of n agents N , a set of m choresM, and a valuation profile V = (vi)i∈N that specifies the preferences of every agent i ∈ N over each subset of the chores inM via a valuation function vi ∶ 2M → Z. If vi(S) ≥ 0 ∀i ∈ N , S ⊆ 2M, then we call the items goods; likewise, if vi(S) ≤ 0 the items are chores. We assume that the valuation functions are additive, i.e. for any i ∈ N and S ⊆M, vi(S) = ∑c∈S vi({c}), where vi(∅) = 0. We write vi(c) instead of vi({c}) for a singleton chore c ∈M. Allocation. An original allocation A = (A1, . . . ,An) refers to an n-partition of the set of chores M, where Ai ⊆M is the bundle allocated to agent i ∈ N and no chore ofM is unallocated. The utility of agent i for the bundle Ai is given by vi(Ai) = ∑c∈Ai vi(c). Restricted valuations. Given algorithmic challenges in achieving fair allocation of chores—in contrast to goods—a substantial number of recent works have focused on allocating chores with binary or bi-valued [Freeman et al., 2020, Ebadian et al., 2022, Garg et al., 2022b], two types [Aziz et al., 2022b, Garg et al., 2022b], and lexicographic valuations [Hosseini et al., 2022b]. In this work, we consider four such special cases of instances. The instance I = ⟨N ,M,V⟩ has identical valuation if for every agents i, j ∈ N and every chore c ∈M it holds that vi(c) = vj(c). It has binary valuations if vi(c) ∈ {−1,0} for every agent i ∈ N and chore c ∈M. We say that I has bivalued valuations if there exists two real numbers x < y < 0 such that vi(c) ∈ {x, y} for every agent i ∈ N and chore c ∈M. Finally, the instance has two types of chores ifM can be partitioned into two sets X and Y such that for every agent i ∈ N and two chores c, c′ from the
same set it holds that vi(c) = vi(c′). Definition 1 (Dubious chore). A dubious chore c′ allocated to agent i ∈ N is a copy of the chore c ∈M such that (i) vh(c′) = vh(c),∀h ∈ N ∖{i} and (ii) vi(c′) = 0. Given an instance I and original allocation A, a dubious multiset D refers to a multiset containing dubious chores copied fromM. A dubious allocation AD = (AD1 , . . . ,ADn ) is an n-partition of the multiset D. We define the augmented allocation A∗ = A ⊎AD such that for each i ∈ N , A∗i = Ai ∪ADi . The utility of agent i for its own augmented bundle is vi(A∗i ) = vi(Ai) while for other agents h ∈ N is vh(A∗i ) = vh(Ai) + vh(ADi ). Definition 2 (Envy-freeness). An allocation A (original, dubious, or augmented) is envy-free (EF) if for every pair of agents i, h ∈ N , vi(Ai) ≥ vi(Ah). The allocation A is envy-free up to one chore (EF1) if for every pair of agents i, h ∈ N such that Ai ≠ ∅, there exists some chore c ∈ Ai such that vi(Ai ∖ {c}) ≥ vi(Ah). Definition 3 (Envy-freeness with dubious chores). An original allocation A is said to be envy-free up to k dubious chores (DEF-k) if there exists a dubious multiset D and dubious allocation AD such that: (i) D consists of up to k dubious chores copied fromM, (ii) the augmented allocation A∗ = A⊎AD is envy-free. Remark 1. From the definitions, it follows that an allocation is EF if and only if it is DEF-0. Moreover, for any non-negative integer k, a DEF-k allocation is also DEF-(k + 1), but the converse may not hold. In Section 4, we show that DEF-k, in general, is stronger than EF1, and as such, an EF1 allocation may not give an optimal bound for DEF-k. In Appendix A, we also consider two stronger notions of envy-freeness with dubious chores, i.e. singly and personalized envy-freeness up to k dubious chores. There, we introduce additional restrictions on what and how dubious chores may be allocated that may be well motivated in some of the potential applications. Pareto optimality. An allocation A is Pareto dominated by allocation B if vi(Bi) ≥ vi(Ai) for every agent i ∈ N , with at least one of the inequalities being strict. A Pareto optimal (PO) allocation is one that is not Pareto dominated by any other allocation. Example 2. Consider the chores instance I in Table 2 with n = m, which contains agents’ valuations vi(c) over chores for i ∈ N , c ∈ M. An allocation A is identified by the circled valuations such that Ai = {ci} ∀i ∈ N . Clearly A is EF1 and PO and agent n envies each other agent i ≠ n.
Consider the dubious multiset D containing n − 1 dubious copies of cn that is allocated as AD = ({c′n},{c′n}, . . . ,{c′n},∅). Then the augmented allocation A∗ = A ⊎AD is envy-free. This follows because for any i, h ∈ N /{n}, vn(A∗i ) = −n − 1 < −n = vn(A∗n), while vi(A∗h) = −n − 1 < −1 = vi(A∗i ) and vi(A∗n) = −n < −1 = vi(A∗i ). Hence, A is DEF-(n − 1). Our method drastically differs from approaches suggesting copying and duplicating items [Aleksandrov, 2022, Gorantla et al., 2022, Gafni et al., 2021, Kulkarni et al., 2021, Kroer and Peysakhovich, 2019, Biswas and Barman, 2018], which creates envy by imposing real additional cost on the receiving agents and thus
may require a larger number of copied chores to eliminate envy. Furthermore, our method differs from approaches eliminating envy by subsidizing agents with positively-valued divisible money or permitting side-payments between agents [Halpern and Shah, 2019, Brustle et al., 2020, Caragiannis and Ioannidis, 2021]. Using our approach, the allocation in Example 1 in the introduction could be made envy-free with one dubious chore. In contrast, there is no positively-valued subsidy that can be allotted to each of the agents to make this allocation envy-free. This follows since Ali must receive any subsidy that Bo or Chan receives to maintain that they have no envy. Remark 2. Every original allocation A is DEF-(m ⋅ n) since it can be augmented with a dubious multiset D with n − 1 copies of each chore. Allocating the dubious chores to each agent that does not receive the corresponding original chore in A will make this allocation envy-free. However, this is a trivial allotment akin to only revealing information about agents’ own bundles [Aziz et al., 2018, Caragiannis et al., 2022]. Throughout this work we provide computational limits and theoretical bounds on the minimum k for which DEF-k allocations exists. RoundRobin algorithm [Caragiannis et al., 2019b]. Fix a permutation σ of the agents. The RoundRobin algorithm cycles through the agents according to σ. In each round, an agent gets its favorite (i.e. least undesirable) chore from the pool of remaining chores. EnvyGraph algorithm [Bhaskar et al., 2021] . The EnvyGraph algorithm iterates through each chore c in rounds, first identifying cycles in the top trading envy graph TA built from the hitherto partial allocation A. This graph is composed of n vertices and edges (i, h) if agent i’s (weakly) most preferred bundle is h in A. The algorithm resolves cycles in TA by transferring to each agent the bundle of the agent they most envy. Afterwards there is some agent who does not envy any other agent, and one such agent is given c.
Fisher Markets. A pricing vector is a function p ∶M → R≥0. Intuitively, we can think of price of chore c ∈ M, i.e. p(c), as a payment that an agent can receive for doing this chore. For a subset S ⊆ M, we denote p(S) = ∑c∈S p(c) For a given pricing vector and agent i, its minimum pain per buck chores is the set of chores with the minimum absolute value of valuation to price ration. Formally, MPBi = argminc∈M ∣vi(c)∣/p(c). A pair of an original allocation and a pricing vector, (A,p), is a Fisher market equilibrium if every agent i ∈ N receives only its minimal pain per buck chores, i.e. Ai ⊆MPBi. It is well known that in every Fisher market equilibrium allocation is PO. A Fisher market equilibrium (A,p) is price envy-free up to one item (pEF-1) if for every i, j ∈ N either Ai = ∅ or there exists c ∈ Ai such that p(Ai ∖ {c}) ≤ p(Aj). It is known that if (A,p) is pEF-1, then A is EF1 [Ebadian et al., 2022]. 4 fairness with dubious chores We begin by analyzing the fairness through dubious chores, without any efficiency requirement. We show the computational hardness of finding the smallest k for which DEF-k exists, discuss the relation between DEF-k and EF1, and prove that an existing algorithm can achieve DEF-(n − 1) in polynomial time. In Section 5, we study the existence and computation of DEF-k along with Pareto optimality. Let us start by studying the decision problem of finding the optimal k for which a DEF-k allocation exists. Bhaskar et al. [2021] demonstrated that determining whether for a given instance there exists an EF allocation is NP-complete. We show that for an arbitrary fixed constant k ∈ Z≥0, determining whether an instance has a DEF-k allocation is NP-complete, even in the simplest cases of identical or binary valuations. Given an instance I = ⟨N ,M,V⟩, for every fixed constant k ∈ Z≥0, deciding if the instance admits a DEF-k allocation A is NP-complete, even when valuations are identical or binary. The proof uses the techniques developed by Bhaskar et al. [2021] and Hosseini et al. [2020] and is relegated to Appendix B. Observe that Section 4 implies that finding the minimal k ∈ Z≥0 such that there
exists a DEF-k allocation is NP-hard as well. Moreover, since hardness holds also for k = 0, there is no polynomial-time constant approximation scheme for this problem, unless P = NP. Corollary 1. Given instance I = ⟨N ,M,V⟩, unless P=NP, there is no polynomial-time algorithm that gives a constant approximation for the problem of finding DEF-k allocation with minimal k.
Section 4 holds when k is a fixed constant. However, if we do not fix k, even the verification problem becomes hard. This means that a natural question of whether a given allocation might be augmented with k dubious chores to an envy-free allocation is computationally intractable. Theorem 1. Given an instance I = ⟨N ,M,V⟩ with binary valuations and an allocation A, deciding if allocation A is DEF-k is NP-complete. Proof. Observe that given a dubious allocation AD, we can verify if the augmented allocation A∗ = A⊎AD is envy-free in polynomial time. Hence, our problem is in NP. Thus, let us focus on showing the hardness. To this end, we follow the reduction from RESTRICTED EXACT COVER BY 3-SETS (RX3C). In RX3C instance I = ⟨U ,S⟩, we are given a universe of n = 3k elements U = (u1, u2, . . . , un) and a family S = (S1, S2, . . . , Sm) of three-element subsets of U such that every element ui appears in exactly 3 subsets, i.e. ∣Si ∈ S ∶ uj ∈ Si∣ = 3 for every j ∈ [n]. Hence, necessarily m = 3k = n. The question is whether we can find a cover of size k, i.e. a subfamily of subsets K ⊂ S such that ∣K∣ = k and ⋃Si∈K Si = U . Observe that in such a case every element of U will appear in subsets in K exactly once, with means that K will be an exact cover as well. The problem is known to be NP-hard [Gonzalez, 1985]. Now, for every instance I of RX3C, we construct a corresponding instance I ′ = ⟨N ,M,V⟩ and an allocation A (for an illustration see Table 3). First, let us take one agent for each element of U and one choosing agent 0. Formally, N = {0,1, . . . , n}. Next, for every ordered pair of agents (i, j) ∈ {1, . . . , n}2 let us take 4 dummy chores, d1i,j , d 2 i,j , d 3 i,j , and d 4 i,j . Also, let us take one chore for every subset in S , i.e. chores c1, . . . , cm. This will give us a total of 4n2 +m chores inM. Further, let us describe the valuations of the agents. For the choosing agent 0, we set the value of every chore to 0. In turn, for every agent i ∈ {1, . . . , n}, we set its valuation of dummy chores to −1, if i is the first agent in the subscript, and 0, otherwise. Formally, for every r ∈ {1,2,3,4} and (j, k) ∈ {1, . . . , n}2 let vi(drj,k) = −1, if j = i, and vi(drj,k) = 0, otherwise. As for chores c1, . . . , cm the valuation depends on whether element ui belongs to the subset corresponding to the particular chore. Formally, we set vi(cj) = −1, if ui ∈ Sj , and vi(cj) = 0, otherwise. Finally, let us specify the allocation A. First, we give all of the chores c1, . . . , cm to the choosing agent 0, i.e. A0 = {c1, . . . , cm}. Then, every agent i ∈ {1, . . . , n}, receives all of the dummy chores in which it is in the second position of the subscript, i.e. Ai = ⋃4r=1{dr1,i, dr2,i, . . . , drn,i}. In the remainder of the proof, let us show that A is DEF-k, if and only if, there exists an exact cover K in the original instance I. To this end, observe that for every two agents i, j ∈ {1,2, . . . , n} we have vi(Aj) = vi(Ai) = −4. Hence, there is no envy among these agents. Furthermore, for the choosing agent 0, we have v0(S) = 0 for every S ⊆M, thus it does not envy any other agents. However, for every agent i ∈ {1,2, . . . , n} we have that vi(A0) is equal to the number of subsets in S that include element ui times −1, which is −3. Hence, the choosing agent is envied by every other agent. Now, in order to eliminate such envy, we have to give the choosing agent 0 at least one dubious copy of a chore that has value −1 for each of agents 1, . . . , n. Since we have 3k such agents, each chore has value −1 for maximally 3 agents, and we can add up to k dubious chores, we have to choose a subset of k chores from {c1, c2, . . . , cm} in such a way that every agent from {1, . . . , n} has value −1 for at least one of them. But that is possible if and only if there exists a set cover in the original instance I. In lieu of this computational hardness, we establish upper-bounds on the required number of dubious chores. While EF1 allocations of chores do exist and can be computed in polynomial time [Aziz et al., 2022a, Bhaskar et al., 2021], such allocations may require many dubious chores (n(n−1)) to become envyfree. This is because each pairwise envy relation between agents, the envied agent can dubiously receive the “worst” chore of the envious agent to remove envy. Example 3 demonstrates that this bound is in fact tight. Proposition 1. Given an instance I = ⟨N ,M,V⟩, every EF1 allocation A is also DEF-n(n − 1). Example 3. The instance presented in Table 4 demonstrates an allocation that is EF1 and DEF-n(n−1) but not DEF-k for any k < n(n− 1). Observe that this allocation is extremely ineffective— any other allocation would give us a Pareto improvement. Furthermore, this allocation may be generated by EnvyGraph. In the next theorem, we demonstrate stronger results for allocations produced by RoundRobin, which require only n − 1 dubious chores to become envy-free. The improvement results from each agent choosing the best of the remaining chores for each round, so they envy all other agents who have as many chores as they do. Then there is a single “worst” chore, the latest chore allocated, that can eliminate all envy-relations when it is dubiously allocated. This is similar to strong envy-freeness up to one good (sEF1) [Conitzer et al., 2019, Hosseini et al., 2020], a fairness notion for goods instances in which all envy to each agent i can be eliminated by removing at most a single good in i’s bundle Ai. Hosseini et al. [2020] note that hiding certain n − 1 of these goods in sEF1 goods allocations can make allocations envy-free and that this is bound is tight for the existence of any hidden envy-free allocation. Conitzer et al. [2019] discuss that both RoundRobin and EnvyGraph yield sEF1 allocations for goods instances; however, only RoundRobin of these yields DEF-(n − 1) for chores instances. Theorem 2. Given an instance I = ⟨N ,M,V⟩, RoundRobin always returns a DEF-(n − 1) allocation. Proof. Let A be an original allocation generated by RoundRobin by the order σ = {1,2, . . . , n}, without loss of generality. Let T be the last agent allocated a chore and let T ′ = (T + 1) mod n be the subsequent
agent in σ. We know that A is EF1 and, specifically ∀i ≠ T ′ and k ≠ i, vi(Ai/{c̃i}) ≥ vi(Ak), where c̃i is the last chore allocated to each agent i by RoundRobin [Caragiannis et al., 2019b, Aziz et al., 2022a]. The subsequent agent T ′ is not envious of any other agent, since they received their most favored chore remaining from the last n rounds of RoundRobin. We also know that in the last n rounds of RoundRobin, each agent i ≠ T chose their chore c̃i over the last allocated chore c̃T , meaning that vi(Ai) ≥ vi(Ai ∪ {c̃T }/{c̃i}). Therefore for every agents i ≠ T ′ and k ≠ i, we have vi(Ai) ≥ vi(Ak ∪ {c̃i}) ≥ vi(Ak ∪ {c̃T }). As a result, if a dubious copy of c̃T were given to every agent except T , no agent would envy any other. This is n − 1 dubious chores. Example 2 demonstrates that the existence of any DEF-k allocation is tight at k = n− 1. This is because some agent i must receive cn in the original allocation and they will envy every other agent by value at least 1. Therefore, at least n−1 chores must be dubiously copied to make i not envious, so any original allocation cannot be DEF-(n − 2). Although RoundRobin produces an allocation that is both EF1 and DEF-(n − 1), is not necessarily the case that all DEF-(n − 1) allocations are EF1, as demonstrated in Example 4. Example 3 already demonstrated that EF1 allocations produced by other specific algorithms, such as EnvyGraph, may be not DEF-(n − 1). Example 4. Fix n = 3 and m = 4 in the instance depicted by Table 5. The original allocation indicated by circled valuations is DEF-2 with respect to the dubious set D = {c′1, c′2} and allocation AD = {∅,{c′1, c′2},∅}, but it is not EF1. 5 fairness and efficiency In this section, we show that there always exists a DEF-(2n − 2) and PO allocation. Moreover, we can efficiently find DEF-(n − 1) and PO allocations in four special cases: if agents have identical, binary, or bivalued valuations, or when there are two types of chores. We start from the general result. Theorem 3. Given an instance I = ⟨N ,M,V⟩, there always exists an DEF-(2n − 2) and PO allocation. Proof. Barman and Krishnamurthy [2019] showed3 that there always exists a Fisher market equilibrium (A,p) such that for every agent i ∈ N
p(Ai) ≤ 1 and ∃c ∈M such that p(Ai ∪ {c}) ≥ 1, or p(Ai) > 1 and ∃c ∈ Ai such that p(Ai ∖ {c}) < 1. (1)
Since (A,p) is an equilibrium, we know that A is PO. In what follows, we show that A is DEF-(2n − 2) as well. 3Barman and Krishnamurthy [2019] considered goods instead of chores, but the same algorithm works for chores. However, the algorithm is based on finding competitive equilibrium with equal incomes (CEEI), which can be computed in polynomial time for goods, but the time complexity for chores is unknown [Bogomolnaia et al., 2017]. To this end, by imax let us denote the agent with maximally priced bundle, i.e. imax ∈ argmaxi∈N p(Ai), and by cmax a chore with the highest price, i.e. cmax ∈ argmaxc∈M p(c). Let us consider a dubious allocation AD in which D consists of 2n − 2 dubious copies of chore cmax, which we denote by c′max, and each agent in N ∖ {imax} receives two dubious copies of this chore. Now, let us show that augmented allocation A∗ = A ⊎AD is envy-free. Observe that every agent i ∈ N does not envy agent imax, even in the original allocation A. Indeed, since i receives only its minimum pain per buck chores, we have
vi(Ai) = −p(Ai) ⋅minc∈M ∣vi(c)∣p(c) ≥ p(Aimax) ⋅maxc∈M vi(c) p(c) ≥ ∑c∈Aimax p(c) ⋅ vi(c) p(c) = vi(Aimax). Hence, in A∗ no agent envies imax as well. Now, let us take arbitrary i, j ∈ N such that i ≠ imax and show that j does not envy i. Observe that
vj(A∗i ) = vj(Ai) + 2vj(c′max) = ∑c∈Ai (p(c) ⋅ vj(c) p(c) ) + 2p(cmax) ⋅ vj(c′max) p(cmax) ≤ −(p(Ai) + 2p(cmax)) ⋅
minc∈M ∣vj(c)∣ p(c) . From Equation (1) we know that p(Ai) + 2p(cmax) ≥ p(Aj). Hence, vj(A∗i ) ≤ −p(Aj) ⋅minc∈M ∣vj(c)∣ p(c) = vj(Aj) = vj(A ∗ j ). Therefore, A∗ is envy-free, so A is DEF-(2n − 2). Let us now move to the special cases. We begin by considering identical valuations and then binary valuations. Theorem 4. For every instance I = ⟨N ,M,V⟩ with identical valuations, there exists an DEF-(n − 1) and PO allocation and it can be computed in polynomial time. Proof. Observe that with identical valuations every allocation is PO. Hence, by Theorem 2, RoundRobin algorithm returns DEF-(n − 1) and PO allocation in such case. Theorem 5. For every instance I = ⟨N ,M,V⟩ with binary valuations, there exists a DEF-(n − 1) and PO allocation and it can be computed in polynomial time. Proof. The following algorithm returns a DEF-(n − 1) and PO allocation. First, assign every chore that has value 0 for some agent to an arbitrary such agent. This already ensures that the final allocation will be PO. Let us assign the remaining common chores, those valued −1 by all agents, by RoundRobin algorithm. Then, either every agent receives exactly the same number of common chores or there are two groups of agents with k and k − 1 such chores for some k ∈ N. In the former case, the allocation is envy-free, hence DEF-(n − 1) as well. In the latter case, if we give a dubious copy of some common chore to every agent that receives k − 1 common chores (and there are at most n − 1 such), we obtain an envy-free augmented allocation as well. For bivalued valuations, we will build on the algorithm introduced by Ebadian et al. [2022] that for every such instance finds an EF1 and PO allocation. The algorithm relies on Fishar market equilibria and in order to use it, we first show the following lemma. Lemma 1. Given an instance I = ⟨N ,M,V⟩, and a pEF-1 Fisher market equilibrium (A,p), it holds that A is a DEF-(n − 1) and PO allocation. Proof. Since an allocation in Fisher market equilibrium is always PO, it suffices to show that if (A,p) is pEF-1, then allocation A is DEF-(n − 1). To this end, let us denote by imax the agent with maximally priced bundle, i.e. imax ∈ argmaxi∈N p(Ai), and by cmax a chore with the highest price, i.e. cmax ∈ argmaxc∈M p(c). Now, we construct a dubious allocation AD where D contains n − 1 copies of cmax, denoted by c′max, which are allocated one each to agents N ∖ {imax}. We show that the obtained augmented allocation A∗ = A ⊎AD is envy-free as follows. First, observe that no agent envies imax, even in the original allocation A. Indeed, every agent i ∈ N receives only its minimum pain per buck chores, therefore
vi(Ai) = −p(Ai) ⋅minc∈M ∣vi(c)∣p(c) ≥ p(Aimax) ⋅maxc∈M vi(c) p(c) ≥ ∑c∈Aimax p(c) ⋅ vi(c) p(c) = vi(Aimax). Hence, in A∗ also no agent envies imax. Thus, let us take arbitrary i, j ∈ N such that i ≠ imax and prove that j does not envy i. Observe that
vj(A∗i ) = vj(Ai) + vj(c′max) = ∑c∈Ai (p(c) ⋅ vj(c) p(c) ) + p(cmax) ⋅ vj(c′max) p(cmax) ≤ −(p(Ai) + p(cmax)) ⋅
minc∈M ∣vj(c)∣ p(c) . Since (A,p) is pEF-1, we know that p(Aj) − p(c) ≤ p(Ai) for some c ∈M. Hence, p(Aj) ≤ p(Ai) + p(cmax). Therefore,
vj(A∗i ) ≤ −p(Aj) ⋅minc∈M ∣vj(c)∣ p(c) = vj(Aj) = vj(A ∗ j ). In conclusion, A∗ is envy-free, so A is DEF-(n − 1). Theorem 6. Given an instance I = ⟨N ,M,V⟩ with bivalued valuations, there exists a DEF-(n − 1) and PO allocation and it can be computed in polynomial time. Proof. Ebadian et al. [2022] provided a polynomial-time algorithm that finds a pEF-1 Fisher market equilibrium for every instance with bivalued valuations. This, combined with Lemma 1, yields the thesis. Finally, let us consider the case of two types of chores. Theorem 7. Given an instance I = ⟨N ,M,V⟩ with two types of chores, there exists a DEF-(n−1) and PO allocation and it can be computed in polynomial time. Proof. By definition, since the instance has two types of chores, we can splitM into two setsX and Y such that for every agent i ∈ N and chores c, c′ in one of the sets we have vi(c) = vi(c′). Thus, for every agent i ∈ N , by vXi and vYi let us denote the agent’s valuations of chores from sets X and Y respectively. Aziz et al. [2022b] provided a polynomial-time algorithm that for every instance with two types of chores finds a PO allocation A and agent i∗ ∈ N such that
1. only agent i∗ may receive chores of two different types, 2. every agent i ∈ N for which vXi /vXi∗ < vYi /vYi∗ receives only items of type X , 3. every agent i ∈ N for which vXi /vXi∗ > vYi /vYi∗ receives only items of type Y , and 4. in the instance with identical valuations obtained from I by changing valuations of every agent to that of agent i∗, i.e. I ′ = ⟨N ,M, vi∗⟩, allocation A is EF1. Thus, it suffices to show that the allocation satisfying these conditions is also DEF-(n − 1). We will do this, by proving that there exists a price vector p such that (A,p) is a pEF-1 Fisher market equilibrium and using Lemma 1. For every chore c of type X or Y let us set p(c) = vXi∗ or p(c) = vYi∗ , respectively. First, let us show that in such a case (A,p) is a Fisher market equilibrium. To this end, observe that for every agent i ∈ N with vXi /vXi∗ < vYi /vYi∗ we have that MPBi consists of all chores of type X . And by condition (2), these are the only chores that agent i receives. Analogously, from condition (3) we get that every agent i ∈ N for which vXi /vXi∗ > vYi /vYi∗ receives only its minimum pain per buck chores as well. Finally, for agent i∗, we get that MPBi∗ =M. Hence, every agent receives only its minimal pain per buck chores, which means that (A,p) is indeed a Fisher market equilibrium. Now, let us show that (A,p) is pEF-1. Fix arbitrary agents i, j ∈ N . If Ai ≠ ∅, then by condition (4) there exists c ∈ Ai such that vi∗(Ai ∖ {c}) ≥ vi∗(Aj). Thus, we get p(Ai ∖ {c}) ≥ p(Aj), which means that (A,p) indeed is pEF-1. Therefore, the thesis follows from Lemma 1. 6 experiments Our computational experiments investigate the optimal number of dubious chores that must be added to make allocations envy-free. We generated a synthetic data set varying the number of agents n from 3 to 10 and number of chores m from 3 to 10 or 20 and considering only the instances with m ≥ n (otherwise the problem is trivialized). For each pair (n,m), we generated 100 instances with binary valuations such that for each agent i ∈ N and chore c ∈M valuation vi(c) is set to −1 with probability 0.7 and to 0 with probability 0.3 (all valuations are drawn independently). To avoid the trivial envy-free case, we set the last chore in each instance to be valued at −1 for each agent. Next, we computed allocations using three different algorithms: (a) EnvyGraph, (b) RoundRobin, and (c) PO. The first two algorithms produce a single allocation per instance that satisfies EF1. The last algorithm searches through all PO allocations and returns one that is DEF-k for minimal k. Tables in Figure 1 show the heatmap of average minimum numbers of dubious chores needed to make the allocations computed by the three algorithms envy-free. In Figure 1a, we see that the number of dubious chores necessary to make the EnvyGraph allocations envy-free increase with the number of agents or chores. For RoundRobin, in Figure 1b, we see that this number also increases with the number of agents but decreases as we have more chores. This may be explained by the fact that with a large number of chores, it is easier for agents to choose chores valued 0 to them but possibly −1 to other agents. With many chores assigned this way, the envy can be reduced using a smaller number of dubious chores. Moreover, observe that the average number of dubious chores needed is generally smaller for allocation RoundRobin than with EnvyGraph. The difference between these two algorithms matches our theoretical findings, as we have an n − 1 bound for RoundRobin (Theorem 2), but the same bound for EnvyGraph does not hold (Example 3). Finally, when looking at the optimal PO solution in Figure 1c, we see that the required number of dubious chores increases with the increase in the number of agents, but drops sharply, when we increase the number of chores. In fact, whenever the number of chores is not almost equal to the number of agents, we can obtain envy-freeness with one or zero dubious chores in most cases. All in all, our experiment shows that in practice the number of dubious chores needed is much smaller than our theoretical guarantees indicate. 7 conclusion We have proposed a novel epistemic framework for fair assignment of chores through the introduction of dubious chores and DEF-k, an approximate fairness notion of envy-freeness. Although finding DEF-k allocations with small k is computationally hard, as we have shown, we have provided several guarantees for the existence of such allocations with and without an additional efficiency requirement of Pareto optimality. Our experimental results suggest that the number of dubious chores required to make an allocation free of envy is lower in practice than our theoretical guarantees indicate. In particular, it seems possible
that there exists a DEF-(n−1) and PO allocation in every instance of chores allocation problem with additive valuations. acknowledgements We thank the anonymous reviewers for helpful comments. Hadi Hosseini acknowledges support from NSF grants #2144413, #2052488, and #2107173. LX acknowledges NSF #1453542, #2007994, and #2106983, and a Google Research Award for support. a additional fairness notions In this section, we consider two stronger notions of envy-freeness with dubious chores: singly DEF-k (sDEFk), where each original chore can only be dubiously copied once, and personalized DEF-k (pDEF-k), where agents can only receive dubious copies of chores in their original bundles. These notions may be better suited in some of the potential applications as they provide natural bounds on the information asymmetry. In particular, the sDEF-k approach may be interpreted as two agents perceived to be sharing certain tasks while incurring equal cost, whereas the pDEF-k approach may be interpreted as agents perceived to incur more cost for the tasks they are already allotted. For both notions we show hardness results similar to those proved for DEF-k in Section 4. Definition 4 (Singly envy-freeness up to k dubious chores). An original allocation A is said to be singly envy-free up to k dubious chores (sDEF-k) if there exists a dubious set (not multiset) D and dubious allocation AD such that: (i) D consists of up to k, pairwise different, dubious chores copied fromM, (ii) the augmented allocation A∗ = A ⊎AD is envy-free. In other words, sDEF-k does not allow for multiple copies of the same chore. Definition 5 (Personalized envy-freeness up to k dubious chores). An original allocation A is said to be personally envy-free up to k dubious chores (pDEF-k) if there exists a dubious multiset D and dubious allocation AD such that: (i) D consists of up to k dubious chores copied from M, (ii) ADi consists only of copies of chores from Ai, for every agent i ∈ N , and (iii) the augmented allocation A∗ = A ⊎ AD is envy-free. In other words, pDEF-k does not allow for assigning a dubious copy of a chore to the agent that is not receiving the original chore in the original allocation. Example 5. Consider the chores instance I in Table 6 with n = 3, m = 4, and identical valuations. An allocation A is identified by the circled valuations. As a result, agent 1 envies agents 2 and 3 by a value of 2 each. We consider three separate dubious multisets and allocations: first,D1 = {c′4, c′4} withAD1 = (∅,{c′4},{c′4}); second, D2 = {c′2, c′3, c′4} with AD2 = (∅,{c′2, c′3},{c′4}); and third, D3 = {c′2, c′2, c′3, c′3} with AD3 = (∅,{c′2, c′2},{c′3, c′3}). Then each augmented allocation A ⊎ AD1 , A ⊎ AD2 , and A ⊎ AD3 are envy-free. Hence, this allocation A is DEF-2, sDEF-3, and pDEF-4. Note that sDEF-k and pDEF-k may not exist for any k ∈ Z≥0, as in Example 3. It is clear that both notions are strictly stronger than DEF-k, i.e. for every k ∈ Z≥0, we have that both sDEF-k or pDEF-k implies DEF-k. Observe that since in the constructions in the proof of Section 4 we always copy each chore at most once we get the hardness also for finding sDEF-k (an analogous problem for pDEF-k remains an open problem). Corollary 2. Given an instance I = ⟨N ,M,V⟩, for every fixed constant k ∈ Z≥0, deciding if the instance admits a sDEF-k allocation A is NP-complete, even when valuations are identical or binary. It may seem that since sDEF-k and pDEF-k are stricter than DEF-k, the verification whether an allocation A is sDEF-k or pDEF-k might be easier. However, in the the construction in the proof of Theorem 1 we copy each chore once and assign it only to the agent that receives it in the original allocation, hence the hardness still holds. Corollary 3. Given an instance I = ⟨N ,M,V⟩ with binary valuations and an allocation A, deciding if allocation A is sDEF-k is NP-complete and deciding if allocation A is pDEF-k is NP-complete as well. b the proof of theorem 4 Recall Section 4. Given an instance I = ⟨N ,M,V⟩, for every fixed constant k ∈ Z≥0, deciding if the instance admits a DEF-k allocation A is NP-complete, even when valuations are identical or binary. We split the theorem’s proof into two separate lemmas. In Lemma 2 we consider identical valuations and in Lemma 3 binary valuations. For technical precision, we formalize the definition of envy as follows. Definition 6 (Envy). Given an allocation A (original, dubious, or augmented) and pair of agents i, h ∈ N , the envy agent i has for agent h is defined as ei(h) = max{vi(Ah) − vi(Ai),0}. The total envy agent i has for all other agents is Ei = ∑h∈N /{i} ei(h). Lemma 2. Given an instance I = ⟨N ,M,V⟩ with identical valuations, for every fixed constant k ∈ Z≥0, deciding if the instance admits a DEF-k allocation A is NP-complete. Proof. Observe that given an allocation A we can verify whether it is DEF-k, by checking all possibilities of copying k chores from M and assigning them among agents in N to see if one of such assignments would give us an envy-free augmented allocation. This can be done in time O(mk ⋅nk). Hence, if the k is a fixed constant, this is polynomial, which means that our problem is in NP. Thus, let us focus on showing the hardness. To this end, we will show a reduction from PARTITION, which is known to be NP-complete [Garey and Johnson, 1979]. An instance of PARTITION consists of a multiset X = {x1, x2, . . . , xn} with xi ∈ N for all i ∈ [n]. The goal is to determine whether there exists Y ⊂ X such that ∑x∈Y x = ∑x∈X/Y x = T , where T = 12 ∑x∈X x. We will construct a fair division instance I = ⟨N ,M,V⟩ with 2k + 2 agents N = {1, . . . ,2k + 2} and n + k chores (see Table 7 for an illustration). The chores are classified into n main chores c1, . . . , cn and k dummy chores cn+1, . . . , cn+k. The (identical) valuations are specified as follows: Every agent values the chores c1, . . . , cn at −x1, . . . ,−xn respectively, and each dummy chore at −T . See Table 7; we denote the k dubious chores by c′n+1, . . . , c ′ n+k. (⇒) Suppose Y is a solution of PARTITION. Then, a DEF-k allocation A can be constructed as follows: Assign the main chores corresponding to the set Y to agent 1 and those corresponding to X/Y to agent 2. Let the first k of the remaining 2k agents be assigned a unique dummy chore. To show that this allocation is DEF-k, let us construct dubious allocation AD such that augmented allocation A∗ = A⊎AD is envy-free. Let D consist of a single copy of each chore c1, . . . , cn. Then the remaining k agents are dubiously assigned these k chores, one per agent. We next prove that augmented allocation A∗ is envy-free. There are three groups of agents: {1,2}, {3, . . . , k + 2}, and {k + 3, . . . ,2k + 2}. Since valuations are identical, each agent in the first two groups has a value of −T and therefore doesn’t envy any other agent in the first two groups. Each agent in the third group, given a dubious chore, values their own bundle at zero and −T for every other agent. Therefore they are not envious. Likewise, no agent is envious of any agent in the third group. We conclude the allocation A∗ is envy-free and therefore A is DEF-k.
(⇐) Now suppose there exists a DEF-k allocation A and by A∗ = A ⊎ AD let us denote the envy-free augmented allocation with ∣D∣ = k. Since there are k dummy chores and 2k + 2 agents, there must exist
at least k + 2 agents that do not receive any dummy chore in AD. Without loss of generality, and to match with the allocation from the first part of this proof, let these agents be labelled 1, 2, and k + 3, . . . ,2k + 2. Furthermore, without loss of generality, suppose agent 3 receives at least one original dummy chore. Then agent 3 envies at least k + 2 agents by a value of at least T each. We claim that all dubious chores must be copied from the dummy chores rather than the main ones. If not, and p ∈ [1, k] dubious chores are copied from main chores, then there are at least p + 2 agents that do not receive an original or dubious chore valued at −T . However, after all (−T )-valued original and dubious chores are allocated, agent 3 has at least (p + 2)T total envy for the remaining agents, but there are only original or dubious chores valued at greater than −(p + 2)T left to be allocated. This would lead A∗ to be not envy-free, contradicting DEF-k of A. Therefore, all dubious chores are copied from the dummy chores. Without loss of generality, suppose that neither agents 1 nor 2 receives an original or dubious dummy chore. We next argue that no other agent receives more than one original or dubious dummy chore under A. If not, suppose agents 2k − p + 3,2k − p + 4, . . . ,2k + 2 do not receive a original or dubious dummy chore for some p ∈ [1,2k − 1], when all such chores are allocated. Then agent 3 has at least (p + 2)T total envy for the remaining agents, but there are only original chores valued at −2T left to be allocated. This would lead A∗ to be not envy-free, contradicting DEF-k of A. Therefore, the original and dubious dummy chores are evenly distributed among the last 2k agents. The only chores not allocated are then the n main chores. Agent 3 envies agents 1 and 2 by T . Since ∣D∣ = k, the remaining chores must be divvied such that v(A1) = v(A2) = −T . This naturally gives a partition of the set X . Now, let us move to the proof for the binary valuations. Lemma 3. Given an instance I = ⟨N ,M,V⟩ with binary valuations, for every fixed constant k ∈ Z≥0, deciding if the instance admits a DEF-k allocation A is NP-complete. Proof. Observe that given an allocation A we can verify whether it is DEF-k, by checking all possibilities of copying k chores from M and assigning them among agents in N to see if one of such assignments would give us an envy-free augmented allocation. This can be done in time O(mk ⋅ nK). Hence, if the k
is a fixed constant this is polynomial, which means that our problem is in NP. Thus, let us focus on proving the hardness. To this end, we will show a reduction from SET SPLITTING which is known to be NP-complete [Garey and Johnson, 1979] and asks the following question: Given a universe U and a family F of subsets of U , does there exist a partition of U into two sets U1 and U2 such that each member ofF is split by this partition, i.e. no member of F is completely contained in either U1 or U2? Construction of the reduced instance: Let q = ∣U ∣ and r = ∣F ∣ denote the cardinality of the universe U and the set family F , respectively. Let r′ = max{q, r, k}. We will find it convenient to refer to the universe as a set of ‘vertices’, the members of the set family F as a set of ‘hyperedges’, and the membership in U1 or U2 as each vertex being ‘colored’ 1 or 2. We will construct a fair division instance withm = r′+q chores and n = r′+k+2 agents. The set of chores consists of q vertex chores c1, . . . , cq and r′ dummy chores cq+1, . . . , cq+r′ . The set of agents consists of r′ edge agents {1,2, . . . , r′}, two color agents {r′+1, r′+2}, and k dummy agents {r′+3, r′+4, . . . , r′+2+k}. When r′ = r, each edge agent should be interpreted as corresponding to a hyperedge, and otherwise if r < r′, then we will interpret the first r edge agents {1,2, . . . , r} as corresponding to the hyperedges while each of the remaining edge agents {r+1, . . . , r′} will be considered as an “imaginary hyperedge” that is adjacent to the entire set of vertices (and therefore does not impose any additional constraints on the coloring problem). Preferences: The (binary) valuations are specified as follows: Each dummy chore is valued at −1 for all agents. Each vertex chore cj , j ≤ q, is valued at Ai,j by edge agent i ∈ {1, . . . , r′}, where Ai,j = −1 if i’s corresponding hyperedge is adjacent to vertex j and 0 otherwise. The color and dummy agents value all vertex chores at 0. See Table 8; we denote the k dubious chores by c′q+2, . . . , c ′ q+k. (⇒) Suppose there exists a partition of U that splits all members of F . Then a DEF-k allocation A can be constructed as follows: first, the r′ dummy chores are uniformly distributed among the r′ edge agents. Next, if a vertex Vj , j ≤ q, is assigned the color ` ∈ {1,2}, then the vertex chore cj is assigned to the color agent c`. Now, to show that A is DEF-k, let us take dubious multiset D = {c′q+1, c′q+2, . . . , c′q+k} and its partition AD = (∅,∅, . . . ,∅,{c′q+1},{c′q+2}, . . . ,{c′q+k}), i.e. k dummy agents, r′ + 3, r′ + 4, . . . , r′ + 2+ k, are dubiously assigned the k dubious-dummy chores, one per agent. There are three groups of agents: {e1, . . . , er′}, {c1, c2}, and {Y1, . . . , Yk}. No agent in the first or third group envies each other because they each receive a unique chore that every other agent values at −1. Neither of the color agents envies any agent in the first or third group because the color agents don’t receive any chore they value negatively. No dummy agent Yi envies a color agent c` because the dummy agent doesn’t receive a chore of negative value. Finally, no edge agent ei envies either color agent since, by the coloring
condition, each of them receives at least one chore that is valued at −1 by ei. We conclude that augmented allocation A∗ is envy-free, thus A is DEF-k.
(⇐) Now suppose there exists a DEF-k allocation A and by A∗ = A ⊎ AD let us denote the envy-free augmented allocation. Then, it must be that all dummy chores are allocated to the edge agents in A. For contradiction, suppose this is not the case and at least one dummy chore is allocated to a color or dummy agent, say c1 without loss of generality. Then every other agent must receive at least one chore that c1 values at −1 in A∗. However, there are r′ + k + 1 such agents besides c1 but only r′ + k − 1 such chores, even if all dubious chores were copied from dummy chores. This is a contradiction, so all dummy chores must be allocated among the edge agents. Next, we show that no edge agent receives more than one dummy chore under the allocationA. Suppose, for contradiction, that the edge agent ei is assigned two or more dummy chores. Then, due to envy-freeness, in A∗, every other agent must get at least two chores that ei values at −1. There are r′ +k +1 agents in total, excluding ei, which necessitates that there must be at least 2r′ + 2k + 2 original or dubious chores valued at −1 by ei. However, the actual number of chores valued at −1 by ei available for allocation is at most (r′ − 2) + k + q ≤ 2r′ + k − 2, leading to a contradiction. Therefore we get that the r′ dummy chores are, in fact, evenly distributed among the edge agents. We now have that no color or dummy agent envies any other color or dummy agent, and that no edge agent envies another edge agent, but that every edge agent envies each color and dummy agent by 1. Since there are k dubious chores and k + 2 color and dummy agents, there are p ≥ 2 agents that do not receive a dubious chore. After all k dubious chores are allocated, at least these p agents are still envied by every edge agent. Suppose these include c1 and c2, without loss of generality. Since A∗ is envy-free, there exists a partition of the q vertex chores into at least p ways that eliminates the remaining pairwise envy. The desired coloring of the vertices (equivalently, the desired partition of the universe U ) can thus be naturally inferred. In particular, the vertex chores allocated to c1 and c2 can be colored respectively and all other vertex chores can be colored arbitrarily. Lemmas 2 and 3 combined yield the thesis of Section 4.