Quadratic NURBS-based discretizations of the Galerkin method suffer from membrane locking when applied to Kirchhoff-Love shell formulations. Membrane locking causes not only smaller displacements than expected, but also large-amplitude spurious oscillations of the membrane forces. Continuous-assumed-strain (CAS) elements have been recently introduced to remove membrane locking in quadratic NURBS-based discretizations of linear plane curved Kirchhoff rods (Casquero et al., CMAME, 2022). In this work, we generalize CAS elements to vanquish membrane locking in quadratic NURBS-based discretizations of linear Kirchhoff-Love shells. CAS elements bilinearly interpolate the membrane strains at the four corners of each element. Thus, the assumed strains have C continuity across element boundaries. To the best of the authors’ knowledge, CAS elements are the first assumed-strain treatment to effectively overcome membrane locking in quadratic NURBSbased discretizations of Kirchhoff-Love shells while satisfying the following important characteristics for computational efficiency: (1) No additional degrees of freedom are added, (2) No additional systems of algebraic equations need to be solved, (3) No matrix multiplications or matrix inversions are needed to obtain the stiffness matrix, and (4) The nonzero pattern of the stiffness matrix is preserved. The benchmark problems show that CAS elements, using either 2 × 2 or 3 × 3 GaussLegendre quadrature points per element, are an effective locking treatment since this element type results in more accurate displacements for coarse meshes and excises the spurious oscillations of the membrane forces. The benchmark problems also show that CAS elements outperform stateof-the-art element types based on Lagrange polynomials equipped with either assumed-strain or reduced-integration locking treatments. 1. introduction Isogeometric analysis (IGA) [1, 2] opens the door for a tighter integration between computeraided design (CAD) and finite element analysis (FEA) of shell structures [3, 4, 5, 6, 7, 8, 9, 10]. In addition, the smoothness of splines across element boundaries enables the use of the Galerkin method
∗Corresponding author. Email address: casquero@umich.edu (Hugo Casquero)
Preprint submitted to CMAME November 2, 2023
ar X
iv :2
31 1. 00 10
1v 1
[ cs
.C E
] 3
1 O
ct 2
02 3
to discretize the primal formulation of Kirchhoff-Love shells [11, 12, 13, 14, 15, 16]. KirchhoffLove shell theory neglects transverse shear strains, which are considered to be negligible as long as R/t ≥ 20 [17], where R is the radius of curvature, t is the thickness, and R/t is the slenderness ratio. Thus, Kirchhoff-Love shells do not suffer from transverse shear locking. Nevertheless, Kirchhoff-Love shells still suffer from membrane locking [18, 19, 20], which is also the case for Reissner-Mindlin shells [21, 22, 23, 24, 25] and solid shells [26, 27, 28, 29, 30, 31]. Membrane locking leads to displacements and bending moments with smaller values than expected and membrane forces with large-amplitude spurious oscillations. Since our goal is the development of a locking treatment that is adopted in commercial FEA software, we first summarize some of the locking treatments that have been widely adopted in commercial FEA software to overcome membrane locking when using Lagrange polynomials with C0 continuity across element boundaries. Assumed-strain treatments use assumed strains obtained from either projecting or interpolating the compatible strains to vanquish locking [32, 33, 34, 35]. Reduced-integration treatments vanquish locking by reducing the number of quadrature points, but this introduces spurious energy modes which need to be dealt with using hourglass control [36, 37, 38, 39]. Assumed-strain and reduced-integration treatments are the two locking treatments more widely utilized by the end users of commercial FEA programs [40, 41, 42]. These two locking treatments are equivalent to mixed methods under certain conditions [43, 44]. Non-uniform rational B-splines (NURBS) can have up to Cp−1 continuity across element boundaries, where p is the degree of the basis functions. In contrast, Lagrange polynomials have C0 continuity across element boundaries for any degree p. As a result of this different level of continuity across element boundaries, the numerical schemes that are effective in overcoming locking for Lagrange polynomials and NURBS are different. Reduced-integration treatments for Lagrange polynomials use p Gauss-Legendre quadrature points per direction and add hourglass control to handle spurious energy modes [36, 37, 38, 39]. Using p Gauss-Legendre quadrature points per direction in a NURBS-based discretization does not create spurious energy modes, but it is not an effective locking treatment either [45, 46, 47, 48]. Reduced-integration treatments for NURBS have been developed in which the integration is performed at the patch level instead of at the element level and spurious energy modes may be avoided in linear problems by slightly over-integrating near the patch boundary [49, 50, 51]. In [52], it was pointed out that these reduced patch-wise quadrature rules may still have spurious energy modes in nonlinear problems. Projection-based assumed-strain treatments for Lagrange polynomials obtain the assumed strains by performing L2 projections of the compatible strains onto lower-degree polynomial spaces within each element [53]. Using a L2 projection for each element results in assumed strains that are discontinuous across element boundaries and it is not an effective locking treatment for NURBS-based discretizations [30, 19, 47]. Projection-based assumed-strain treatments for NURBS have been developed in which the L2 projection is performed at the patch level instead of at the element level which enables to obtain assumed strains with the needed continuity patterns across element boundaries [54, 55, 30, 56]. However, performing the L2 projection at the patch level requires the inversion of a mass matrix at the patch level to obtain the stiffness matrix at the patch level which results to be a full matrix instead of a sparse matrix. To decrease the computational burden, the reconstructed B̄ projections were developed for NURBS-based discretizations [30, 57, 58, 19, 59]. The reconstructed B̄ projections perform the L2 projections at the element level and then combine the results from different elements to recover the needed continuity patterns of the assumed strains across element boundaries. Nevertheless, reconstructed B̄ projections still require matrix multiplications to obtain the stiffness
matrix at the patch level and its bandwidth increases. Interpolation-based assumed-strain treatments for Lagrange polynomials define the assumed strains using lower-degree polynomial spaces and interpolate the compatible strains at interior points within each element [60]. Using interpolation points in the interior of each element results in assumed strains that are discontinuous across element boundaries and it is not an effective locking treatment for NURBS-based discretizations since the spurious oscillations of the stress resultants are not stripped away [58, 47, 61]. Continuous-assumed-strain (CAS) elements were recently introduced to remove membrane locking in quadratic NURBS-based discretizations of linear plane curved Kirchhoff rods [47], shear and membrane locking in quadratic NURBS-based discretizations of linear plane curved Timoshenko rods [48], and volumetric locking in quadratic NURBS-based discretizations of nearly-incompressible linear elasticity [62]. CAS elements are an interpolation-based assumed-strain treatment whose interpolation points are located at element boundaries instead of in the interior of each element. In this work, we generalize CAS elements to overcome membrane locking in quadratic NURBS-based discretizations of linear Kirchhoff-Love shells. CAS elements bilinearly interpolate the membrane strains at the four corners of each element. Since the displacement vector given by quadratic NURBS has C1 continuity across element boundaries, the assumed strains obtained have C0 continuity across element boundaries. To the best of the authors’ knowledge, CAS elements are the first assumed-strain treatment to effectively overcome membrane locking in quadratic NURBS-based discretizations of Kirchhoff-Love shells while satisfying the following important characteristics for the computational efficiency of the numerical scheme: (1) No additional degrees of freedom are added, (2) No additional systems of algebraic equations need to be solved, (3) No matrix multiplications or matrix inversions are needed to obtain the stiffness matrix, and (4) The nonzero pattern of the stiffness matrix is preserved. Membrane locking causes not only smaller displacements than expected, but also large-amplitude spurious oscillations of the membrane forces. The spurious oscillations of the membrane forces persist for fine meshes that result in accurate displacements [47, 48]. Thus, we study the accuracy of both displacements and membrane forces to show that CAS elements verily overcome membrane locking. The paper is outlined as follows. Section 2 sets forth the mathematical theory of linear KirchhoffLove shells. Section 3 summarizes how to solve the problem using compatible-strain (CS) elements. Section 4 develops CAS elements to overcome membrane locking in quadratic NURBS-based discretizations of linear Kirchhoff-Love shells. Section 5 evaluates the performance of CS and CAS elements using either 2× 2 or 3× 3 Gauss-Legendre quadrature points per element, including comparisons with exact solutions and state-of-the-art element types based on Lagrange polynomials equipped with either assumed-strain or reduced-integration locking treatments. Sections 5.1, 5.2, 5.3, and 5.4 consider the cylindrical shell strip [20], the pinched hemisphere with a hole [63], the Scordelis-Lo roof [63, 64], and the partly clamped hyperbolic paraboloid [65, 66] as benchmark problems, respectively. Concluding remarks and directions of future work are drawn in Section 6. 2. linear kirchhoff-love shells In this section, we consider Kirchhoff-Love shells with infinitesimal deformations and small strains, that is, we do not consider either geometric nonlinearities or material nonlinearities. The geometry of the shell is defined by its midsurface and its thickness t, which we assume to be constant throughout the whole shell. We state the Kirchhoff-Love shell formulation using the Lagrangian description and curvilinear coordinates. For a mathematical derivation of the model, the reader is referred to [67, 68]. In the following, indices in Greek letters take the values {1, 2}, indices in Latin letters take the values {1, 2, 3}, and repeated indices imply summation. Subscript indices indicate covariant quantities while superscript indices indicate contravariant quantities. (·) · (·) and (·) × (·) denote the dot and cross products of vectors, respectively. || · || denotes the length of a vector. | · | denotes the determinant of a matrix. 2.1. kinematics in infinitesimal deformations The geometry of the midsurface is defined by the parametric surface r(θ) : [0, 1]2 7→ R3, where θ = (θ1, θ2) are parametric coordinates and r is the position vector of a material point on the midsurface. Partial derivatives with respect to the parametric coordinates are indicated by comma, i.e., (·),α = ∂(·)/∂θα. The displacement vector of a material point on the midsurface is defined as u(θ) : [0, 1]2 7→ R3. Both r and u are defined using a global system of Cartesian coordinates. Non-unit tangent vectors to the midsurface are obtained by
aα = r,α. (1)
The unit normal vector to the midsurface is obtained by
a3 = a1 × a2
||a1 × a2|| . (2)
The local covariant basis of the midsurface is defined as (a1,a2,a3). The covariant metric coefficients of the midsurface are defined as aαβ = aα · aβ. (3) The contravariant metric coefficients can be computed as the inverse matrix of the covariant coefficients, i.e., [ aαβ ] = [aαβ]
−1. The covariant curvature coefficients of the midsurface are defined as bαβ = aα,β · a3. (4) Mixed curvature coefficients can be obtained using the index raising property of the contravariant metric coefficients, viz.,
bαβ = a αλbλβ. (5)
The covariant coefficients of the membrane strains are defined as
ϵαβ = 1
2 (u,α · aβ + u,β · aα) . (6)
The covariant coefficients of the bending pseudo-strains are defined as
καβ =− a3 · u,αβ + 1
||a3|| [(aα,β × a2) · u,1 + (a1 × aα,β) · u,2
+ aα,β · a3[(a2 × a3) · u,1 + (a3 × a1) · u,2]]. (7) 2.2. linear material The membrane forces and the bending moments are the stress resultants of Kirchhoff-Love shells that are obtained from constitutive equations. Here, we consider an isotropic and linear elastic material. The contravariant coefficients of the membrane forces are defined as
nαβ = Et 1− ν2 [ (1− ν)aαλ aµβ ϵλµ + νaαβ aµλ ϵλµ ] . (8)
where E is the Young’s modulus and ν is the Poisson’s ratio. The contravariant coefficients of the bending moments are defined as
mαβ = Et3 12(1− ν2) [ (1− ν)aαλaµβκλµ + νaαβaµλκλµ ] . (9)
The contravariant coefficients of the effective membrane forces are defined as
nαβeff = n αβ +mαλbβλ. (10)
The contravariant coefficients nαβ, mαβ, and nαβeff refer to the covariant basis (a1,a2,a3), which is not necessarily an orthonormal basis. Thus, to obtain these stress resultants in normalized units, these coefficients need to be transformed into a local Cartesian basis using the transformation rules
n̂αβ = nγµ(eα · aγ)(aµ · eβ), (11) m̂αβ = mγµ(eα · aγ)(aµ · eβ), (12) n̂αβeff = n γµ eff (e α · aγ)(aµ · eβ), (13)
where eα is the αth base vector of the local Cartesian basis, n̂αβ are the membrane coefficients with respect to the local Cartesian basis, m̂αβ are the bending coefficients with respect to the local Cartesian basis, and n̂αβeff are the effective membrane coefficients with respect to the local Cartesian basis. We choose to compute the local Cartesian basis as follows
e1 = e 1 = a1 ||a1|| , (14)
e2 = e 2 = a2 − (a2 · e1)e1 ||a2 − (a2 · e1)e1|| . (15) 2.3. variational form The variational form can be obtained from the principle of virtual work which states that the internal virtual work (δW int) must be equal to the external virtual work (δW ext) for any virtual displacement (δu), i.e., δW int = δW ext ∀δu, (16) with
δW int = ∫ A ( δϵαβn αβ + δκαβm αβ ) dA, (17)
δW ext = ∫ A δuifi dA, (18)
where dA = √ |aαβ|dθ1dθ2 is the differential area, A is the area of the midsurface, δϵαβ are the virtual covariant membrane strain coefficients, δκαβ are the virtual covariant bending pseudo-strain coefficients, and fi is the ith component of a vector defined in a global system of Cartesian coordinates that represents a load per unit area acting on the midsurface. The total strain energy of the shell is defined as
ET = Em + Eb, (19)
with
Em = 1
2 ∫ A ϵαβn αβ dA, (20)
Eb = 1
2 ∫ A καβm αβ dA, (21)
where Em is the membrane strain energy of the shell and Eb is the bending strain energy of the shell. 3. compatible-strain (cs) elements The geometry of the midsurface is represented as a linear combination of NURBS basis functions, viz.,
r(θ) = ncp∑ A=1 NA(θ)QA, (22)
where QA is the A-th control point and ncp is the total number of control points. In this work, we use open knot vectors with no repeated interior knots and quadratic basis functions. For the details of how to define a geometry using NURBS basis functions and how to perform h-refinement using the knot insertion algorithm, the reader is referred to [2]. Using the isoparametric concept, the displacement vector is discretized as follows
uh(θ) = ncp∑ A=1 NA(θ)UA, (23)
where UA is the A-th control variable of the displacement vector. Using the Bubnov-Galerkin method, the virtual displacements are discretized as δuh(θ) ∈ span{NA(θ)}ncpA=1. The discretization choices made above completely define the element stiffness matrix of CS elements, viz.,
k = kϵ + kκ, (24)
kϵ = [kϵ,ibjc] , kκ = [kκ,ibjc] , (25)
where k is the element stiffness matrix, kϵ is the element membrane stiffness matrix, and kκ is the element bending stiffness matrix. The explicit expression of kϵ,ibjc is given by
kϵ,ibjc = Et
4(1 + ν) ∫ Ae Nb,αei · aβaαλaµβNc,λej · aµ dA
+ Et
4(1 + ν) ∫ Ae Nb,αei · aβaαλaµβNc,µej · aλ dA
+ Et
4(1 + ν) ∫ Ae Nb,βei · aαaαλaµβNc,λej · aµ dA
+ Et
4(1 + ν) ∫ Ae Nb,βei · aαaαλaµβNc,µej · aλ dA
+ Etν
4(1− ν2) ∫ Ae Nb,αei · aβaαβaµλNc,λej · aµ dA
+ Etν
4(1− ν2) ∫ Ae Nb,αei · aβaαβaµλNc,µej · aλ dA
+ Etν
4(1− ν2) ∫ Ae Nb,βei · aαaαβaµλNc,λej · aµ dA
+ Etν
4(1− ν2) ∫ Ae Nb,βei · aαaαβaµλNc,µej · aλ dA, (26)
where Ae is the midsurface area of element e. The explicit expression of kκ,ibjc can be obtained analogously and it is omitted here for brevity. Following standard FEA paraphernalia, the integrals above are computed performing change of variables from the parametric coordinates (θ1, θ2) to the parent element with coordinates (θ̂1, θ̂2) ∈ [−1, 1]2. The assembly of the nel element stiffness matrices into the global stiffness matrix is performed using conventional connectivity arrays as explained in [69, 2], where nel is the total number of elements in the mesh. 4. continuous-assumed-strain (cas) elements The covariant membrane strain coefficients of a CS element have the following expression
ϵhαβ(θ) = 1
2
( uh,α((θ) · aβ(θ) + uh,β(θ) · aα(θ) ) . (27)
Leveraging the C1 continuity across element boundaries of the geometry and the displacement vector given by quadratic NURBS, the linear interpolation of the covariant membrane strain coefficients at the knots in each direction results in assumed strains with C0 continuity across element boundaries. Thus, the assumed covariant membrane strain coefficients of a CAS element are defined as follows
ϵCASαβ (θ) = 4∑
l=1
Ll(θ)ϵ h αβ(θ e l ), (28)
with
θe1 = (θ 1e 1 , θ 2e 1 ), θ e 2 = (θ 1e 2 , θ 2e 1 ), θ e 3 = (θ 1e 1 , θ 2e 2 ), θ e 4 = (θ 1e 2 , θ 2e 2 ), (29) L1(θ) = θ1e2 − θ1 θ1e2 − θ1e1 θ2e2 − θ2 θ2e2 − θ2e1 , L2(θ) = θ1 − θ1e1 θ1e2 − θ1e1 θ2e2 − θ2 θ2e2 − θ2e1 , L3(θ) = θ1e2 − θ1 θ1e2 − θ1e1 θ2 − θ2e1 θ2e2 − θ2e1 , L4(θ) = θ1 − θ1e1 θ1e2 − θ1e1 θ2 − θ2e1 θ2e2 − θ2e1 , (30)
where θ1e1 and θ 1e 2 are the parametric coordinates of the two knots that define element e in the parametric direction given by θ1, θ2e1 and θ 2e 2 are the parametric coordinates of the two knots that define element e in the parametric direction given by θ2, and Ll is a bilinear Lagrange polynomial. Using the assumed strains proposed in Eq. (28), the element stiffness matrix of CAS elements is obtained as follows kCAS = kCASϵ + kκ, (31)
kCASϵ = [ kCASϵ,ibjc ] , kκ = [kκ,ibjc] , (32)
where kCAS is the element stiffness matrix of CAS elements, kCASϵ is the element membrane stiffness matrix of CAS elements, and kκ is the same element bending stiffness matrix as that of CS elements. The explicit expression of kCASϵ,ibjc is given by
kCASϵ,ibjc =
+ Et
4(1 + ν) 4∑ l=1 4∑ m=1 ∫ Ae Ll(θ)Nb,α(θ e l )ei · aβ(θel )aαλ(θ)aµβ(θ)Lm(θ)Nc,λ(θem)ej · aµ(θem) dA
+ Et
4(1 + ν) 4∑ l=1 4∑ m=1 ∫ Ae Ll(θ)Nb,α(θ e l )ei · aβ(θel )aαλ(θ)aµβ(θ)Lm(θ)Nc,µ(θem)ej · aλ(θem) dA
+ Et
4(1 + ν) 4∑ l=1 4∑ m=1 ∫ Ae Ll(θ)Nb,β(θ e l )ei · aα(θel )aαλ(θ)aµβ(θ)Lm(θ)Nc,λ(θem)ej · aµ(θem) dA
+ Et
4(1 + ν) 4∑ l=1 4∑ m=1 ∫ Ae Ll(θ)Nb,β(θ e l )ei · aα(θel )aαλ(θ)aµβ(θ)Lm(θ)Nc,µ(θem)ej · aλ(θem) dA
+ Etν 4(1− ν2) 4∑
l=1 4∑ m=1 ∫ Ae Ll(θ)Nb,α(θ e l )ei · aβ(θel )aαβ(θ)aµλ(θ)Lm(θ)Nc,λ(θem)ej · aµ(θem) dA
+ Etν 4(1− ν2) 4∑
l=1 4∑ m=1 ∫ Ae Ll(θ)Nb,α(θ e l )ei · aβ(θel )aαβ(θ)aµλ(θ)Lm(θ)Nc,µ(θem)ej · aλ(θem) dA
+ Etν 4(1− ν2) 4∑
l=1 4∑ m=1 ∫ Ae Ll(θ)Nb,β(θ e l )ei · aα(θel )aαβ(θ)aµλ(θ)Lm(θ)Nc,λ(θem)ej · aµ(θem) dA
+ Etν 4(1− ν2) 4∑
l=1 4∑ m=1 ∫ Ae Ll(θ)Nb,β(θ e l )ei · aα(θel )aαβ(θ)aµλ(θ)Lm(θ)Nc,µ(θem)ej · aλ(θem) dA. (33)
For CAS elements, the computation of the integrals to obtain each element stiffness matrix and the assembly of each element stiffness matrix into the global stiffness matrix follows the same steps as those summarized for CS elements in the last paragraph of the preceding section. Note that CAS elements do not require any additional global or element matrix operations such as matrix inversions or matrix multiplications. The locking treatment is applied at the element level and the nonzero pattern of the global stiffness matrix is preserved. 5. numerical experiments In this section, we perform numerical investigations using the discretizations described in Sections 3 and 4. Unless mentioned otherwise, 3×3 Gauss-Legendre quadrature points per element are used to compute all the integrals. The code used to perform these simulations has been developed on top of the PetIGA framework [70], which adds NURBS discretization capabilities and integration of forms to the scientific library PETSc [71]. 5.1. cylindrical shell strip The first numerical investigation considers a cylindrical shell strip clamped at one end and free at the other end. A line load, i.e., a load per unit length is applied at the free end in the radial
direction. The geometry, the boundary conditions, and the applied load are shown in Fig. 1. The next values are used in this example:
qx = −0.1t3, R = 10.0, b = 1.0, E = 1.0× 103, ν = 0.0. (34)
In order to consider different values of the slenderness ratio, three values are used for the thickness in this example, namely, t = 1.0, t = 0.1, and t = 0.01. For t = 1.0, R/t = 10 which is considered to be too thick to use Kirchhoff-Love theory according to [17]. We consider this slenderness ratio in this example to show that even a quite thick shell can suffer from membrane locking. Despite its apparent simplicity, this benchmark problem is challenging to solve numerically since it is a bending-dominated problem. For this problem, we can obtain the exact solution of the effective membrane force in the circumferential direction and the bending moment in the circumferential direction by enforcing static equilibrium on the shell. Specifically, we obtain n̂11eff = qx cosφ and m̂11 = −qxR cosφ, where the angle φ is shown in Fig. 1. The exact solution of n̂11 can be obtained combining the preceding two exact solutions. Thus, we can use these exact solutions to study the convergence in L2 norm of the membrane force in the circumferential direction and the bending moment in the circumferential direction. In order to do so, we define the relative errors in L2 norm of the membrane force in the circumferential direction and the bending moment in the circumferential direction as
eL2(n̂ h 11) =
√∫ A ( n̂h11 − n̂11 )2 dA√∫
A n̂211 dA
, (35)
eL2(m̂ h 11) =
√∫ A ( m̂h11 − m̂11 )2 dA√∫
A m̂211 dA
, (36)
respectively. Since we are solving fourth-order partial differential equations with quadratic basis functions, the optimal asymptotic convergence rates of eL2(n̂ h 11) and eL2(m̂ h 11) are 2 and 1, respectively [69]. We initiate our convergence study with a uniform mesh composed of two quadratic elements in the circumferential direction and one element in the other direction. The midsurface of the shell is represented exactly since we are using quadratic NURBS. After that, we perform uniform h-refinement seven times in the circumferential direction (i.e., we keep one element in the other direction throughout all the refinement levels). Using CS elements and CAS elements, Fig. 2 a) plots the convergence of the radial displacement of the point A indicated in Fig. 1. The displacement values are normalized by the solution obtained using 256 CS elements of degree 9 in the circumferential direction, which is used as a reference solution. The reference values of the radial displacement at point A are −9.4561×10−1, −9.4250×10−1, and −9.4247×10−1 for R/t = 10 , 102, and 103, respectively. Fig. 2 b) and c) plot the convergence in L2 norm of the membrane force in the circumferential direction and the bending moment in the circumferential direction, respectively. nel1 represents the number of elements in the circumferential direction. As shown in Fig. 2 a), b), and c), the convergence of CAS elements is independent of the slenderness ratio for the broad range of R/t values considered while the convergence of CS elements heavily deteriorates as the slenderness ratio increases. Fig. 2 b) reveals an anomalous behavior in the convergence of the membrane force in the circumferential direction using CS elements, namely, the relative error in L2
norm of the membrane force in the circumferential direction increases as uniform h-refinement is performed multiple times (note that for many mesh resolutions and slenderness ratios the relative error of the membrane force is greater than 100%). This anomalous behavior, caused by membrane locking, has also been reported in [72, 20, 47, 48]. For both coarse and fine meshes, the relative error in L2 norm of the membrane force in the circumferential direction obtained with CAS elements is several orders of magnitude smaller than the relative error in L2 norm of the membrane force in the circumferential direction obtained with CS elements. In [58, 47], the global B̄ method, the reconstructed B̄ method, the reconstructed ANS method, and CAS elements lead to an asymptotic convergence rate for the L2 norm of the membrane force equal to 1.5 when applied to C1-continuous quadratic NURBS discretizations of linear plane Kirchhoff rods. Thus, CAS elements leading to an asymptotic convergence rate for the L2 norm of the membrane force equal to 1.5 when applied to C1-continuous quadratic NURBS discretizations of linear Kirchhoff-Love shells was the expected outcome. Fig. 2 d) plots the ratio of the membrane strain energy to the total strain energy as the slenderness ratio increases using 8 CS elements and 8 CAS elements in the circumferential direction. The numerical solution using 8 CAS elements in the circumferential direction overlaps with the reference solution, which uses 256 CS elements of degree 9 in the circumferential direction. However, as the slenderness ratio increases, membrane locking causes the introduction of spurious membrane energy in the numerical solution obtained using 8 CS elements in the circumferential direction. As shown in [51], when using reduced patch-wise integration rules, the continuity of the chosen integration space must not be greater than the continuity of the strains so as to reproduce constant stress states. The bending strains are discontinuous across element boundaries when discretizing Kirchhoff-Love shells with C1-continuous quadratic NURBS. Therefore, the continuity of the integration space must be discontinuous across element boundaries to exactly reproduce constant stress states, which is needed to obtain accurate results. In this case, the integration is no longer patchwise, but element-wise instead and coincides with the Gauss-Legendre quadrature rules. Thus, using both CS and CAS elements, we now solve this problem using 2× 2 Gauss-Legendre quadrature points per element (2GP) as opposed to using 3 × 3 Gauss-Legendre quadrature points per element (3GP) to compute all the integrals. As shown in Fig. 3, CAS elements result in essentially the same accuracy regardless of whether 2 quadrature points per direction or 3 quadrature points per direction are used. Therefore, 2 quadrature points per direction can be used to decrease the computational time. However, CS elements with 2 quadrature points per direction are still a locking-prone discretization. Fig. 4 plots the distribution of the membrane force in the circumferential direction for the slenderness ratio R/t = 102. Fig. 4 a) plots the reference solution which is obtained using 256 CS elements of degree 9 in the circumferential direction. Fig. 4 b) and c) plot the numerical solution obtained using 8 CAS elements in the circumferential direction with 3 and 2 quadrature points per direction, respectively. These two numerical solutions are free from spurious oscillations. Fig. 4 d), e), and f) plot the numerical solution obtained using 8, 16, and 32 CS elements in the circumferential direction with 3 quadrature points per direction, respectively. Fig. 4 g), h), and i) plot the numerical solution obtained using 8, 16, and 32 CS elements in the circumferential direction with 2 quadrature points per direction, respectively. These six numerical solutions suffer from large-amplitude spurious oscillations caused by membrane locking. As shown in Fig. 3, 32 CS elements in the circumferential direction result in accurate displacement values for R/t = 102, but the membrane force in the circumferential direction undergoes large-amplitude spurious oscillations
nonetheless. Thus, whenever investigating whether or not a certain discretization suffers from membrane locking, it is not enough to only study the accuracy of the displacements, the accuracy of the membrane forces must be studied as well. Note that the amplitude of the oscillations obtained with 2 quadrature points per direction is greater than the amplitude of the oscillations obtained with 3 quadrature points despite that the relative error in L2 norm of the membrane force in the circumferential direction obtained with 2 quadrature points is smaller than the relative error in L2 norm of the membrane force in the circumferential direction obtained with 3 quadrature points as shown in Fig. 3 c). 5.2. pinched hemisphere with a hole The second numerical investigation considers a pinched hemisphere with a hole under four point loads perpendicular to the midsurface as shown in Fig. 5 a). Given the symmetry of this problem,
we solve for one quarter of the geometry with the appropriate boundary conditions and point loads as shown in Fig. 5 b). The next values are used in this example
P = 31250t3, R = 10.0, E = 6.825× 107, ν = 0.3. (37)
In order to consider different values of the slenderness ratio, the thickness values t = 4.0 × 10−2, t = 4.0× 10−3, and t = 4.0× 10−4 are used. This benchmark problem is a doubly-curved bendingdominated problem. Thus, this problem is particularly prone to membrane locking. We initiate our convergence study with a uniform mesh composed of 22 quadratic elements. The midsurface of the shell is represented exactly since we are using quadratic NURBS. After that, we perform uniform h-refinement seven times. Using CS elements and CAS elements, Fig. 6 a) plots the convergence of the radial displacement of the point A indicated in Fig. 5. The displacement values are normalized by the reference solution, which is obtained using 2562 CS elements of degree 9. The reference values of the radial displacement at point A are −9.3521× 10−2, −9.1594× 10−2, and −9.0817×10−2 for R/t = 2.5×102, 2.5×103, and 2.5×104, respectively. As shown in Fig. 6 a),
the convergence of CAS elements is independent of the slenderness ratio for the broad range of R/t values considered while the convergence of CS elements heavily deteriorates as the slenderness ratio increases. Fig. 6 b) plots the ratio of the membrane strain energy to the total strain energy as the slenderness ratio increases using 82 CS elements and 82 CAS elements. The numerical solution using 82 CAS elements overlaps with the reference solution, which uses 2562 CS elements of degree 9. However, membrane locking causes the introduction of spurious membrane energy in the numerical solution obtained using 82 CS elements for all the slenderness ratios considered. Fig. 7 plots the distribution of the in-plane shear force for the slenderness ratio R/t = 250. Fig. 7 a) plots the reference solution which is obtained using 2562 CS elements of degree 9. Fig. 7 b) plots the numerical solution obtained using 162 CAS elements. This numerical solution is free from spurious oscillations which shows the effectiveness of CAS elements in vanquishing membrane locking. Fig. 7 c), d), e), and f) plot the numerical solution obtained using 162, 322, 642, and 1282 CS elements, respectively, which suffer from spurious oscillations caused by membrane locking. Note that 322 and 642 CS elements for the slenderness ratio R/t = 250 result in accurate displacements
(see Fig. 6), but they still suffer from large-amplitude spurious oscillations of the in-plane shear force (see Fig. 7). Fig. 8 compares the performance of CAS elements with that of state-of-the-art element types based on Lagrange polynomials. ELFORM 2 is a Reissner-Mindlin shell element based on bilinear Lagrange polynomials that uses reduced integration with hourglass control to treat locking. ELFORM 2 is available in the commercial software LS-DYNA within the keyword SECTION SHELL and it is based on References [73, 39]. ELFORM 16 is a Reissner-Mindlin shell element based on bilinear Lagrange polynomials that uses assumed strains to treat locking. ELFORM 16 is available in the commercial software LS-DYNA within the keyword SECTION SHELL and it is based on References [74, 75, 44, 35]. ELFORM 3 is a solid shell element based on trilinear Lagrange polynomials that uses assumed strains to treat locking. ELFORM 3 is available in the commercial software LS-DYNA within the keyword SECTION TSHELL and it is based on References [76, 77, 27]. As shown in Fig. 8, CAS elements outperform all the considered element types based on Lagrange polynomials. 5.3. scordelis-lo roof The third numerical investigation considers a cylinder under a distributed load in the vertical direction as shown in Fig. 9. The next values are used in this example
qz = 90.0, R = 25.0, L = 50.0, E = 4.32× 108, ν = 0. (38)
In order to consider different values of the slenderness ratio, the thickness values t = 2.5×10−1 and t = 2.5 × 10−2 are used. This benchmark problem is not a bending-dominated problem. In [78], an asymptotic analysis was performed that showed that Eb/ET and Em/ET tend to 3/8 and 5/8 as R/t tends to infinity. It was also shown that the rate with which ET increases as R/t tends to infinity is 7/4. Even though the geometry has two planes of symmetry, we run the simulations on the whole geometry without applying symmetry. We initiate our convergence study with a uniform mesh composed of 42 quadratic elements for the whole geometry. The midsurface of the shell is represented exactly since we are using quadratic NURBS. After that, we perform uniform h-refinement six times. Using CS elements and CAS elements, Fig. 10 a) plots the convergence of the vertical displacement of the point A indicated in Fig. 9. The displacement values are normalized by the solution obtained using 2562 CS elements of degree 9, which is used as a reference solution. The reference values of the vertical displacement at point A are −3.0059×10−1 and −3.2010×10+1 for R/t = 102 and 103, respectively. As reported in [19], the membrane and bending strain energies tend to localize near the free edge as the slenderness ratio tends to infinity, which leads to the formation of boundary
layers. Thus, even in a locking-free discretization, it is expected that more elements are needed to obtain a certain level of accuracy as the slenderness ratio increases. To the best of the authors’ knowledge, no discretization method has shown to result in levels of accuracy independent of the slenderness ratio for this benchmark problem. As shown in Fig. 10 a), CAS elements result in significantly more accurate displacement values for coarse meshes than CS elements. Fig. 10 b) plots the total strain energy as the slenderness ratio increases using 322 CS elements and 322 CAS elements. Fig. 10 c) plots the ratio of the membrane strain energy to the total strain energy as the slenderness ratio increases using 322 CS elements and 322 CAS elements. Fig. 10 d) plots the ratio of the bending strain energy to the total strain energy as the slenderness ratio increases using 322 CS elements and 322 CAS elements. As shown in Fig. 10 b)-d), the numerical solution using 322 CAS elements is in agreement with the asymptotic analysis performed in [78] while the numerical solution obtained using 322 CS elements is not in agreement with the asymptotic analysis due to membrane locking. Fig. 11 plots the distribution of the membrane force in the circumferential direction for the slenderness ratios R/t = 102 and 103. Fig. 11 a) and b) plot the reference solutions for the slenderness ratios R/t = 102 and 103, respectively, which are obtained using 2562 CS elements of degree 9. Fig. 11 c) and d) plot the numerical solutions obtained for the slenderness ratio R/t = 102 using 162 CS elements and for the slenderness ratio R/t = 103 using 322 CS elements, respectively. Fig. 11 e) and f) plot the numerical solutions obtained for the slenderness ratio R/t = 102 using 162 CAS elements and for the slenderness ratio R/t = 103 using 322 CAS elements, respectively. As shown in Fig. 11, the numerical solutions obtained using CS elements suffer from large-amplitude spurious oscillations caused by membrane locking while the numerical solutions obtained using CAS elements are free from spurious oscillations and closely resemble the reference solutions. Table 1 compares the performance of CAS elements with that of the reconstructed B̄ projections developed for NURBS-based discretizations of linear Kirchhoff-Love shells in [19]. In both [19] and in this work, the whole geometry of the roof is considered in the simulations. The reconstructed B̄ projections perform the L2 projections at the element level and then combine the results from different elements to recover the continuity patterns of the assumed strains across element boundaries. As shown in Table 1, CAS elements and reconstructed B̄ projections result in very similar levels of accuracy for the different mesh resolutions considered. However, for a given mesh, reconstructed B̄ projections are significantly more computationally expensive than CAS elements since they require
solving systems of algebraic equations at the element level, matrix multiplications to obtain the stiffness matrix at the patch level, and the bandwidth of the stiffness matrix at the patch level is increased. Fig. 12 compares the performance of CAS elements with that of state-of-the-art element types based on Lagrange polynomials. SHELL181-RI is a Reissner-Mindlin shell element based on bilinear Lagrange polynomials that uses reduced integration with hourglass control to treat locking. SHELL181-RI is available in the commercial software Ansys Mechanical. SHELL181-AS is a Reissner-Mindlin shell element based on bilinear Lagrange polynomials that uses assumed strains to treat locking. SHELL181-AS is available in the commercial software Ansys Mechanical and it is based on References [35, 79]. As shown in Fig. 12, CAS elements perform better than these element types based on Lagrange polynomials. 5.4. partly clamped hyperbolic paraboloid The fourth numerical investigation considers a hyperbolic paraboloid clamped on one side under a distributed load in the vertical direction as shown in Fig. 13 a). The geometry of the midsurface is defined by z = x2 − y2, −L/2 ≤ x ≤ L/2, −L/2 ≤ y ≤ L/2. (39) Given the symmetry of this problem, we solve for one half of the geometry with the appropriate boundary conditions as shown in Fig. 13 b). The next values are used in this example
qz = 8000.0t, L = 1.0, E = 2.0× 1011, ν = 0.3. (40)
In order to consider different slenderness, the thickness values t = 10−2, t = 10−3, and t = 10−4 are used. As in [66, 30, 19], the L/t ratio is used as a measure of slenderness. This benchmark problem is a bending-dominated problem with non-constant curvatures. We initiate our convergence study with a uniform mesh composed of 2 × 1 quadratic elements (2 elements in the x direction and 1 element in the y direction). The midsurface of the shell is represented exactly since we are using quadratic NURBS. After that, we perform uniform hrefinement seven times. Using CS elements and CAS elements, Fig. 14 a) plots the convergence
of the vertical displacement of the point A indicated in Fig. 13. The displacement values are normalized by the solution obtained using 256 × 128 CS elements of degree 9, which is used as a reference solution. The reference values of the vertical displacement at point A are −9.3128× 10−5, −6.3957 × 10−3, and −5.3059 × 10−1 for L/t = 102, 103, and 104, respectively. As shown in Fig. 14 a), the convergence of CS elements heavily deteriorates as the L/t ratio increases while the convergence of CAS elements is similar for the broad range of L/t values considered. Fig. 14 b) plots the ratio of the membrane strain energy to the total strain energy as the L/t ratio increases using 8×4 CS elements and 8×4 CAS elements. The numerical solution using 8×4 CAS elements closely follows the reference solution, which uses 256 × 128 CS elements of degree 9. However, membrane locking causes the introduction of spurious membrane energy in the numerical solution obtained using 8× 4 CS elements as the L/t ratio increases. We also solve this problem using 2×2 Gauss-Legendre quadrature points per element to compute all the integrals as opposed to using 3×3 Gauss-Legendre quadrature points per element. As shown in Fig. 15, CAS elements result in essentially the same accuracy regardless of whether 2 quadrature points per direction or 3 quadrature points per direction are used. Therefore, 2 quadrature points per direction can be used to decrease the computational time. However, CS elements with 2 quadrature points per direction are still a locking-prone discretization. 6. conclusions and future work In this work, linear Kirchhoff-Love shells are used to investigate how to effectively overcome membrane locking in quadratic NURBS-based discretizations of shells. We developed an interpolationbased assumed-strain treatment, named continuous-assumed-strain (CAS) elements, that vanquishes membrane locking by bilinearly interpolating the membrane strains at the four corners of each element. This locking treatment results in assumed strains with C0 continuity across element boundaries. The effects of membrane locking are not only smaller displacements than expected, but also large-amplitude spurious oscillations of membrane forces. The spurious oscillations of membrane forces can take place for fine meshes for which the displacement values are already accurate. Therefore, evaluating the efficacy of a locking treatment by only studying the accuracy of the displacements is not enough, the accuracy of the membrane forces needs to be studied as well. CAS elements, using either 2×2 or 3×3 Gauss-Legendre quadrature points per element, are an effective locking treatment since this element type results in more accurate displacements for coarse meshes
and gets rid of the spurious oscillations of the membrane forces. CAS elements are computationally efficient since the computational cost scarcely increases with respect to the locking-prone CS elements. In addition, CAS elements outperform state-of-the-art element types based on Lagrange polynomials equipped with either assumed-strain or reduced-integration locking treatments. 